{
  "version": 3,
  "sources": [
    "node_modules\\browser-pack\\_prelude.js",
    "node_modules\\browserify\\node_modules\\events\\events.js",
    "src\\library\\controller\\buffer-controller.js",
    "src\\library\\controller\\flow-controller.js",
    "src\\library\\demux\\exp-golomb.js",
    "src\\library\\demux\\h264-demuxer.js",
    "src\\library\\demux\\h264-nal-slicesreader.js",
    "src\\library\\demux\\jtt1078-demuxer.js",
    "src\\library\\demux\\jtt1078-package-reader.js",
    "src\\library\\errors.js",
    "src\\library\\event-handler.js",
    "src\\library\\events.js",
    "src\\library\\index.js",
    "src\\library\\jvp.js",
    "src\\library\\loader\\audio-recorder.js",
    "src\\library\\loader\\websocket-loader.js",
    "src\\library\\remux\\aac-adts.js",
    "src\\library\\remux\\aac-helper.js",
    "src\\library\\remux\\mp4-generator.js",
    "src\\library\\remux\\mp4-remuxer.js",
    "src\\library\\utils\\logger.js",
    "src\\library\\utils\\polyfill.js"
  ],
  "names": [],
  "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",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()",
    "// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nfunction EventEmitter() {\n  this._events = this._events || {};\n  this._maxListeners = this._maxListeners || undefined;\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function(n) {\n  if (!isNumber(n) || n < 0 || isNaN(n))\n    throw TypeError('n must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nEventEmitter.prototype.emit = function(type) {\n  var er, handler, len, args, i, listeners;\n\n  if (!this._events)\n    this._events = {};\n\n  // If there is no 'error' event listener then throw.\n  if (type === 'error') {\n    if (!this._events.error ||\n        (isObject(this._events.error) && !this._events.error.length)) {\n      er = arguments[1];\n      if (er instanceof Error) {\n        throw er; // Unhandled 'error' event\n      } else {\n        // At least give some kind of context to the user\n        var err = new Error('Uncaught, unspecified \"error\" event. (' + er + ')');\n        err.context = er;\n        throw err;\n      }\n    }\n  }\n\n  handler = this._events[type];\n\n  if (isUndefined(handler))\n    return false;\n\n  if (isFunction(handler)) {\n    switch (arguments.length) {\n      // fast cases\n      case 1:\n        handler.call(this);\n        break;\n      case 2:\n        handler.call(this, arguments[1]);\n        break;\n      case 3:\n        handler.call(this, arguments[1], arguments[2]);\n        break;\n      // slower\n      default:\n        args = Array.prototype.slice.call(arguments, 1);\n        handler.apply(this, args);\n    }\n  } else if (isObject(handler)) {\n    args = Array.prototype.slice.call(arguments, 1);\n    listeners = handler.slice();\n    len = listeners.length;\n    for (i = 0; i < len; i++)\n      listeners[i].apply(this, args);\n  }\n\n  return true;\n};\n\nEventEmitter.prototype.addListener = function(type, listener) {\n  var m;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events)\n    this._events = {};\n\n  // To avoid recursion in the case that type === \"newListener\"! Before\n  // adding it to the listeners, first emit \"newListener\".\n  if (this._events.newListener)\n    this.emit('newListener', type,\n              isFunction(listener.listener) ?\n              listener.listener : listener);\n\n  if (!this._events[type])\n    // Optimize the case of one listener. Don't need the extra array object.\n    this._events[type] = listener;\n  else if (isObject(this._events[type]))\n    // If we've already got an array, just append.\n    this._events[type].push(listener);\n  else\n    // Adding the second element, need to change to array.\n    this._events[type] = [this._events[type], listener];\n\n  // Check for listener leak\n  if (isObject(this._events[type]) && !this._events[type].warned) {\n    if (!isUndefined(this._maxListeners)) {\n      m = this._maxListeners;\n    } else {\n      m = EventEmitter.defaultMaxListeners;\n    }\n\n    if (m && m > 0 && this._events[type].length > m) {\n      this._events[type].warned = true;\n      console.error('(node) warning: possible EventEmitter memory ' +\n                    'leak detected. %d listeners added. ' +\n                    'Use emitter.setMaxListeners() to increase limit.',\n                    this._events[type].length);\n      if (typeof console.trace === 'function') {\n        // not supported in IE 10\n        console.trace();\n      }\n    }\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.once = function(type, listener) {\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  var fired = false;\n\n  function g() {\n    this.removeListener(type, g);\n\n    if (!fired) {\n      fired = true;\n      listener.apply(this, arguments);\n    }\n  }\n\n  g.listener = listener;\n  this.on(type, g);\n\n  return this;\n};\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener = function(type, listener) {\n  var list, position, length, i;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events || !this._events[type])\n    return this;\n\n  list = this._events[type];\n  length = list.length;\n  position = -1;\n\n  if (list === listener ||\n      (isFunction(list.listener) && list.listener === listener)) {\n    delete this._events[type];\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n\n  } else if (isObject(list)) {\n    for (i = length; i-- > 0;) {\n      if (list[i] === listener ||\n          (list[i].listener && list[i].listener === listener)) {\n        position = i;\n        break;\n      }\n    }\n\n    if (position < 0)\n      return this;\n\n    if (list.length === 1) {\n      list.length = 0;\n      delete this._events[type];\n    } else {\n      list.splice(position, 1);\n    }\n\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.removeAllListeners = function(type) {\n  var key, listeners;\n\n  if (!this._events)\n    return this;\n\n  // not listening for removeListener, no need to emit\n  if (!this._events.removeListener) {\n    if (arguments.length === 0)\n      this._events = {};\n    else if (this._events[type])\n      delete this._events[type];\n    return this;\n  }\n\n  // emit removeListener for all listeners on all events\n  if (arguments.length === 0) {\n    for (key in this._events) {\n      if (key === 'removeListener') continue;\n      this.removeAllListeners(key);\n    }\n    this.removeAllListeners('removeListener');\n    this._events = {};\n    return this;\n  }\n\n  listeners = this._events[type];\n\n  if (isFunction(listeners)) {\n    this.removeListener(type, listeners);\n  } else if (listeners) {\n    // LIFO order\n    while (listeners.length)\n      this.removeListener(type, listeners[listeners.length - 1]);\n  }\n  delete this._events[type];\n\n  return this;\n};\n\nEventEmitter.prototype.listeners = function(type) {\n  var ret;\n  if (!this._events || !this._events[type])\n    ret = [];\n  else if (isFunction(this._events[type]))\n    ret = [this._events[type]];\n  else\n    ret = this._events[type].slice();\n  return ret;\n};\n\nEventEmitter.prototype.listenerCount = function(type) {\n  if (this._events) {\n    var evlistener = this._events[type];\n\n    if (isFunction(evlistener))\n      return 1;\n    else if (evlistener)\n      return evlistener.length;\n  }\n  return 0;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  return emitter.listenerCount(type);\n};\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\n",
    "/** Buffer Controller */\n\nimport Event from '../events';\nimport EventHandler from '../event-handler';\nimport { ErrorTypes, ErrorDetails } from '../errors';\n\nclass BufferController extends EventHandler {\n\n  constructor(jvp) {\n    super(jvp,\n      Event.MEDIA_ATTACHING,\n      Event.BUFFER_APPENDING,\n      Event.BUFFER_RESET\n    );\n\n    this.media = null;\n    this.mediaSource = null;\n    this.sourceBuffer = {};\n    this.segments = [];\n    this.appended = 0;\n    this._msDuration = null;\n\n    // Source Buffer listeners\n    this.onsbue = this.onSBUpdateEnd.bind(this);\n    this.onsbe = this.onSBUpdateError.bind(this);\n    this.pendingTracks = {};  // not used.\n    this.tracks = {};\n\n    this.mediaType = 'H264Raw';\n    this.channelName = undefined;\n    this.websocketProtocol = undefined;\n    this.websocketIp = undefined;\n    this.websocketPort = undefined;\n    this.websocketName = undefined;\n    this.wsParams = undefined;\n  }\n\n  destroy() {\n    EventHandler.prototype.destroy.call(this);\n  }\n\n  /////////////////////////////////////////////////////////////////////////////////////////////////\n\n  onMediaAttaching(data) {\n    let media = this.media = data.media;\n    this.mediaType = data.mediaType;\n    this.channelName = data.channelName;\n    this.websocketProtocol = data.websocketProtocol;\n    this.websocketIp = data.websocketIP;\n    this.websocketPort = data.websocketPort;\n    this.websocketName = data.websocketName;\n    this.wsParams = data.wsParams;\n    if (media) {\n      // setup the media source\n      var ms = this.mediaSource = new MediaSource();\n\n      //Media Source listeners\n      this.onmso = this.onMediaSourceOpen.bind(this);\n      this.onmse = this.onMediaSourceEnded.bind(this);\n      this.onmsc = this.onMediaSourceClose.bind(this);\n      ms.addEventListener('sourceopen', this.onmso);\n      ms.addEventListener('sourceended', this.onmse);\n      ms.addEventListener('sourceclose', this.onmsc);\n\n      // link video and media Source\n      media.src = URL.createObjectURL(ms);\n    }\n  }\n\n  // { type: trackName, data: initSegment, parent: 'main' }\n  onBufferAppending(data) {\n    if (!this.segments) {\n      this.segments = [data];\n    } else {\n      this.segments.push(data);\n    }\n    this.doAppending();\n  }\n\n  onBufferReset(tracks) {\n    let sourceBuffer = this.sourceBuffer;\n    for (let type in sourceBuffer) {\n      let sb = sourceBuffer[type];\n      try {\n        this.mediaSource.removeSourceBuffer(sb);\n        sb.removeEventListener('updateend', this.onsbue);\n        sb.removeEventListener('error', this.onsbe);\n      } catch (err) {\n      }\n    }\n    this.sourceBuffer = {};\n    this.flushRange = [];\n    this.segments = [];\n    this.appended = 0;\n\n    if (this.mediaType === 'H264Raw') {\n      this.createSourceBuffers(tracks); //{ tracks: 'video', mimeType: data.mimeType, avFlagIS: data.avFlagIS });\n    }\n    if (this.mediaType === 'JTT1078') {\n      this.createSourceBuffers(tracks); //{ tracks: 'video', mimeType: data.mimeType, avFlagIS: data.avFlagIS });\n    }\n    this.jvp.trigger(Event.UI_EVENT, { eventName: 'BufferReset' });\n  }\n\n  /////////////////////////////////////////////////////////////////////////////////////////////////\n\n  onMediaSourceOpen() {\n    let mediaSource = this.mediaSource;\n    if (mediaSource) {\n      // once received, don't listen anymore to sourceopen event\n      mediaSource.removeEventListener('sourceopen', this.onmso);\n    }\n\n    if (this.mediaType === 'FMp4') {\n      this.checkPendingTracks();\n    }\n\n    this.jvp.trigger(Event.MEDIA_ATTACHED, {\n      media: this.media,\n      channelName: this.channelName,\n      mediaType: this.mediaType,\n      websocketProtocol: this.websocketProtocol,\n      websocketIp: this.websocketIp,\n      websocketPort: this.websocketPort,\n      websocketName: this.websocketName,\n      wsParams: this.wsParams\n    });\n  }\n\n  onMediaSourceEnded() {\n    console.log('media source ended');\n  }\n\n  onMediaSourceClose() {\n    console.log('media source closed');\n  }\n\n  /////////////////////////////////////////////////////////////////////////////////////////////////\n\n  onSBUpdateEnd(event) {\n    if (this.jvp.browserType === 1) {  // Firefox\n      this.mediaSource.endOfStream();\n      this.media.play();\n    }\n    this.appending = false;\n    this.doAppending();\n    this.jvp.trigger(Event.UI_PLAYING, {});\n  }\n\n  onSBUpdateError(event) {\n    console.log('sourceBuffer error:', event);\n    // according to http://www.w3.org/TR/media-source/#sourcebuffer-append-error\n    // this error might not always be fatal (it is fatal if decode error is set, in that case\n    // it will be followed by a mediaElement error ...)\n    this.jvp.trigger(Event.ERROR, { type: ErrorTypes.MEDIA_ERROR, details: ErrorDetails.BUFFER_APPENDING_ERROR, fatal: false });\n    // we don't need to do more than that, as accordin to the spec, updateend will be fired just after\n  }\n\n  /////////////////////////////////////////////////////////////////////////////////////////////////\n\n  checkPendingTracks() {\n    this.createSourceBuffers({ tracks: 'video', mimeType: '' });\n    this.pendingTracks = {}; // not used.\n  }\n\n  // { tracks: 'video', mimeType: data.mimeType, buffer: mediaSource.addSourceBuffer(mimeType)}\n  createSourceBuffers(tracks) {\n    var sourceBuffer = this.sourceBuffer, mediaSource = this.mediaSource;\n\n    var success = true;\n    for (let trackName in tracks) {\n      if (!sourceBuffer[trackName]) {\n\n        let track = tracks[trackName];\n        let codec = track.levelCodec || track.codec;  // use levelCodec as first priority\n        let mimeType = `${track.container};codecs=${codec}`;\n        console.log(`creating sourceBuffer(${mimeType})`);\n\n        try {\n          let sb = sourceBuffer[trackName] = mediaSource.addSourceBuffer(mimeType);\n          sb.addEventListener('updateend', this.onsbue);\n          sb.addEventListener('error', this.onsbe);\n          this.tracks[trackName] = { codec: codec, container: track.container };\n          track.buffer = sb;\n        }\n        catch (err) {\n          success = false;\n          console.log(`error while trying to add sourceBuffer:${err.message}`);\n          this.jvp.trigger(Event.ERROR, { type: ErrorTypes.MEDIA_ERROR, details: ErrorDetails.BUFFER_ADD_CODEC_ERROR, fatal: false, err: err, mimeType: mimeType });\n        }\n      }\n    }\n\n    if (success) {\n      console.log(\"createSourceBuffers OK\");\n      this.jvp.trigger(Event.BUFFER_CREATED, { tracks: tracks });\n      this.media.loop = false;\n      this.media.play();\n    }\n  }\n\n  // { type: trackName, data: initSegment, parent: 'main' }\n  // segments = [{type, data}], type='video'\n  doAppending() {\n    var jvp = this.jvp, sourceBuffer = this.sourceBuffer, segments = this.segments;\n    if (Object.keys(sourceBuffer).length) {\n\n      if (this.media.error) {\n        this.segments = [];\n        console.log('trying to append although a media error occured, flush segment and abort');\n        return;\n      }\n      if (this.appending) {\n        return;\n      }\n\n      if (segments && segments.length) {\n        var segment = segments.shift();\n        //this.jvp.priintBinaryArray(segment.data, this.websocketName);\n\n        try {\n          if (sourceBuffer[segment.type]) {\n            this.parent = segment.parent;\n            sourceBuffer[segment.type].appendBuffer(segment.data);\n            this.appendError = 0;\n            this.appended++;\n            this.appending = true;\n          } else {\n            // do nothing\n          }\n        } catch (err) {\n          // in case any error occured while appending, put back segment in segments table \n          segments.unshift(segment);\n          var event = { type: ErrorTypes.MEDIA_ERROR };\n          if (err.code !== 22) {\n            if (this.appendError) {\n              this.appendError++;\n            } else {\n              this.appendError = 1;\n            }\n\n            event.details = ErrorDetails.BUFFER_APPEND_ERROR;\n            event.frag = this.fragCurrent;\n            if (this.appendError > jvp.config.appendErrorMaxRetry) {\n              segments = [];\n              event.fatal = true;\n              return;\n            } else {\n              event.fatal = false;\n            }\n          } else {\n            this.segments = [];\n            event.details = ErrorDetails.BUFFER_FULL_ERROR;\n            return;\n          }\n        }\n      } // end of if (segments && segments.length)\n    }\n  }\n}\n\nexport default BufferController;\n",
    "/** Flow Controller */\n\nimport Event from '../events';\nimport EventHandler from '../event-handler';\n\nclass FlowController extends EventHandler {\n\n  constructor(jvp) {\n    super(jvp,\n      Event.MEDIA_ATTACHED,\n      Event.BUFFER_CREATED,\n      Event.WEBSOCKET_ATTACHED,\n      Event.FRAG_PARSING_DATA,\n      Event.FRAG_PARSING_INIT_SEGMENT);\n\n    this.fileStart = 0;\n    this.fileEnd = 0;\n    this.pendingAppending = 0;\n    this.mediaType = undefined;\n    this.channelName;\n  }\n\n  destroy() {\n    EventHandler.prototype.destroy.call(this);\n  }\n\n  /////////////////////////////////////////////////////////////////////////////////////////////////\n\n  onMediaAttached(data) {\n    this.mediaType = data.mediaType;\n    if (!data.websocketProtocol || !data.websocketIp || !data.websocketPort || !data.websocketName) {\n      console.log('websocket parameter ERROE!!! current url is ' + '' + data.websocketProtocol + '://' + data.websocketIp + ':' + data.websocketPort + '/' + data.websocketName + '?' + data.wsParams);\n      return;\n    }\n\n    var url = '' + data.websocketProtocol + '://' + data.websocketIp + ':' + data.websocketPort + '/' + data.websocketName + '?' + data.wsParams;\n    console.log('current url is ' + url);\n\n    if (data.websocketProtocol == 'ws') {\n      //var client = new WebSocket('ws://localhost:8888' + '/' + data.websocketName);\n      var client = new WebSocket(url);\n      this.jvp.trigger(Event.WEBSOCKET_ATTACHING, { websocket: client, mediaType: data.mediaType, channelName: data.channelName, websocketName: data.websocketName });\n    }\n    else if (data.websocketProtocol == 'http') {\n      var eurl = encodeURI(url);\n      if (typeof XMLHttpRequest != \"undefined\") {\n        // chrome\n        if (this.jvp.browserType == 2) {\n          this.jvp.trigger(Event.WEBSOCKET_ATTACHING, { websocket: eurl, mediaType: data.mediaType, channelName: data.channelName, websocketName: data.websocketName });\n          console.log(\"http chrome ready use fetch \");\n        }\n        else {\n          var xhr = new XMLHttpRequest();\n          xhr.open(\"GET\", eurl, true);\n          this.jvp.trigger(Event.WEBSOCKET_ATTACHING, { websocket: xhr, mediaType: data.mediaType, channelName: data.channelName, websocketName: data.websocketName });\n          console.log(\"http create XMLHttpRequest OK, browserType=\" + this.jvp.browserType);\n        }\n      }\n      else {\n        console.log(\"Browser don't support XMLHttpRequest!\");\n      }\n    }\n    else {\n      console.log('websocketProtocol ERROE!!! current websocketProtocol is ' + data.websocketProtocol);\n    }\n  }\n\n  // // { tracks: 'video', mimeType: data.mimeType, buffer: mediaSource.addSourceBuffer(mimeType)}\n  onBufferCreated(data) {\n  }\n\n  /////////////////////////////////////////////////////////////////////////////////////////////////\n\n  onWebsocketAttached(data) {\n    this.jvp.trigger(Event.BUFFER_APPENDING, { type: 'video', data: data.payload, parent: 'main' });\n  }\n\n  /////////////////////////////////////////////////////////////////////////////////////////////////\n\n  // { id: this.id, level: this.level, sn: this.sn, tracks: tracks, unique: false }\n  // tracks.audio = { container: 'audio/mp4', codec: audioTrack.codec, initSegment: MP4.initSegment([audioTrack]), metadata: { channelCount: audioTrack.channelCount } };\n  // tracks.video = { container: 'video/mp4', codec: videoTrack.codec, initSegment: MP4.initSegment([videoTrack]), metadata: { width: videoTrack.width, height: videoTrack.height } };\n  onFragParsingInitSegment(data) {\n    var tracks = data.tracks, trackName, track;\n\n    track = tracks.video;\n    if (track) {\n      track.id = data.id;\n    }\n\n    for (trackName in tracks) {\n      track = tracks[trackName];\n      var initSegment = track.initSegment;\n      if (initSegment) {\n        this.pendingAppending++;\n        this.jvp.trigger(Event.BUFFER_APPENDING, { type: trackName, data: initSegment, parent: 'main' });\n      }\n    }\n  }\n\n  // { id: this.id, level: this.level, sn: this.sn, data1: moof, data2: mdat, startPTS: ptsnorm, endPTS: ptsnorm, startDTS: dtsnorm, endDTS: dtsnorm, type: 'video', nb: outputSamples.length, dropped: dropped };\n  onFragParsingData(data) {\n    [data.data1, data.data2].forEach(buffer => {\n      if (buffer) {\n        this.pendingAppending++;\n        this.jvp.trigger(Event.BUFFER_APPENDING, { type: data.type, data: buffer, parent: 'main', curFragFrameType: data.curDataType });\n      }\n    });\n  }\n}\n\nexport default FlowController;",
    "/*** Parser for exponential Golomb codes, a variable-bitwidth number encoding scheme used by h264. */\n\nimport { logger } from '../utils/logger';\n\nclass ExpGolomb {\n\n  constructor(data) {\n    this.data = data;\n    // the number of bytes left to examine in this.data\n    this.bytesAvailable = this.data.byteLength;\n    // the number of bits left to examine in the current word\n    this.bitsAvailable = 0; // :uint\n    // the current word being examined\n    this.word = 0; // :uint\n  }\n\n  /////////////////////////////////////////////////////////////////////////////////////////////////\n\n  // ():void\n  loadWord() {\n    var\n      position = this.data.byteLength - this.bytesAvailable,\n      workingBytes = new Uint8Array(4),\n      availableBytes = Math.min(4, this.bytesAvailable);\n    if (availableBytes === 0) { throw new Error('no bytes available'); }\n\n    workingBytes.set(this.data.subarray(position, position + availableBytes));\n    this.word = new DataView(workingBytes.buffer).getUint32(0);\n\n    // track the amount of this.data that has been processed\n    this.bitsAvailable = availableBytes * 8;\n    this.bytesAvailable -= availableBytes;\n  }\n\n  /////////////////////////////////////////////////////////////////////////////////////////////////\n\n  // (count:int):void\n  skipBits(count) {\n    var skipBytes; // :int\n    if (this.bitsAvailable > count) {\n      this.word <<= count;\n      this.bitsAvailable -= count;\n    } else {\n      count -= this.bitsAvailable;\n      skipBytes = count >> 3;\n      count -= (skipBytes >> 3);\n      this.bytesAvailable -= skipBytes;\n      this.loadWord();\n      this.word <<= count;\n      this.bitsAvailable -= count;\n    }\n  }\n\n  // ():uint\n  skipLZ() {\n    var leadingZeroCount; // :uint\n    for (leadingZeroCount = 0; leadingZeroCount < this.bitsAvailable; ++leadingZeroCount) {\n      if (0 !== (this.word & (0x80000000 >>> leadingZeroCount))) {\n        // the first bit of working word is 1\n        this.word <<= leadingZeroCount;\n        this.bitsAvailable -= leadingZeroCount;\n        return leadingZeroCount;\n      }\n    }\n    // we exhausted word and still have not found a 1\n    this.loadWord();\n    return leadingZeroCount + this.skipLZ();\n  }\n\n  // ():void\n  skipUEG() {\n    this.skipBits(1 + this.skipLZ());\n  }\n\n  // ():void\n  skipEG() {\n    this.skipBits(1 + this.skipLZ());\n  }\n\n  /**\n   * Advance the ExpGolomb decoder past a scaling list. The scaling\n   * list is optionally transmitted as part of a sequence parameter\n   * set and is not relevant to transmuxing.\n   * @param count {number} the number of entries in this scaling list\n   * @see Recommendation ITU-T H.264, Section 7.3.2.1.1.1\n   */\n  skipScalingList(count) {\n    var\n      lastScale = 8,\n      nextScale = 8,\n      j,\n      deltaScale;\n    for (j = 0; j < count; j++) {\n      if (nextScale !== 0) {\n        deltaScale = this.readEG();\n        nextScale = (lastScale + deltaScale + 256) % 256;\n      }\n      lastScale = (nextScale === 0) ? lastScale : nextScale;\n    }\n  }\n\n  /////////////////////////////////////////////////////////////////////////////////////////////////\n\n  // (size:int):uint, size<32\n  readBits(size) {\n    var\n      bits = Math.min(this.bitsAvailable, size), // :uint\n      valu = this.word >>> (32 - bits); // :uint\n    if (size > 32) { logger.error('Cannot read more than 32 bits at a time'); }\n\n    this.bitsAvailable -= bits;\n    if (this.bitsAvailable > 0) {\n      this.word <<= bits;\n    } else if (this.bytesAvailable > 0) {\n      this.loadWord();\n    }\n    bits = size - bits;\n    if (bits > 0) {\n      return valu << bits | this.readBits(bits);\n    } else {\n      return valu;\n    }\n  }\n\n  // ():uint\n  readUEG() {\n    var clz = this.skipLZ(); // :uint\n    return this.readBits(clz + 1) - 1;\n  }\n\n  // ():int\n  readEG() {\n    var valu = this.readUEG(); // :int\n    if (0x01 & valu) {\n      // the number is odd if the low order bit is set\n      return (1 + valu) >>> 1; // add 1 to make it even, and divide by 2\n    } else {\n      return -1 * (valu >>> 1); // divide by two then make it negative\n    }\n  }\n\n  // Some convenience functions\n  // :Boolean\n  readBoolean() {\n    return 1 === this.readBits(1);\n  }\n\n  // ():int\n  readUByte() {\n    return this.readBits(8);\n  }\n\n  // ():int\n  readUShort() {\n    return this.readBits(16);\n  }\n  // ():int\n  readUInt() {\n    return this.readBits(32);\n  }\n\n  /**\n   * Read a sequence parameter set and return some interesting video\n   * properties. A sequence parameter set is the H264 metadata that\n   * describes the properties of upcoming video frames.\n   * @param data {Uint8Array} the bytes of a sequence parameter set\n   * @return {object} an object with configuration parsed from the\n   * sequence parameter set, including the dimensions of the\n   * associated video frames.\n   */\n  readSPS() {\n    var\n      frameCropLeftOffset = 0,\n      frameCropRightOffset = 0,\n      frameCropTopOffset = 0,\n      frameCropBottomOffset = 0,\n      sarScale = 1,\n      profileIdc, profileCompat, levelIdc,\n      numRefFramesInPicOrderCntCycle, picWidthInMbsMinus1,\n      picHeightInMapUnitsMinus1,\n      frameMbsOnlyFlag,\n      scalingListCount,\n      i;\n    this.readUByte();\n    profileIdc = this.readUByte(); // profile_idc\n    profileCompat = this.readBits(5); // constraint_set[0-4]_flag, u(5)\n    this.skipBits(3); // reserved_zero_3bits u(3),\n    levelIdc = this.readUByte(); //level_idc u(8)\n    this.skipUEG(); // seq_parameter_set_id\n\n    // some profiles have more optional data we don't need\n    if (profileIdc === 100 ||\n      profileIdc === 110 ||\n      profileIdc === 122 ||\n      profileIdc === 244 ||\n      profileIdc === 44 ||\n      profileIdc === 83 ||\n      profileIdc === 86 ||\n      profileIdc === 118 ||\n      profileIdc === 128) {\n      var chromaFormatIdc = this.readUEG();\n      if (chromaFormatIdc === 3) {\n        this.skipBits(1); // separate_colour_plane_flag\n      }\n      this.skipUEG(); // bit_depth_luma_minus8\n      this.skipUEG(); // bit_depth_chroma_minus8\n      this.skipBits(1); // qpprime_y_zero_transform_bypass_flag\n      if (this.readBoolean()) { // seq_scaling_matrix_present_flag\n        scalingListCount = (chromaFormatIdc !== 3) ? 8 : 12;\n        for (i = 0; i < scalingListCount; i++) {\n          if (this.readBoolean()) { // seq_scaling_list_present_flag[ i ]\n            if (i < 6) {\n              this.skipScalingList(16);\n            } else {\n              this.skipScalingList(64);\n            }\n          }\n        }\n      }\n    }\n\n    this.skipUEG(); // log2_max_frame_num_minus4\n    var picOrderCntType = this.readUEG();\n    if (picOrderCntType === 0) {\n      this.readUEG(); //log2_max_pic_order_cnt_lsb_minus4\n    } else if (picOrderCntType === 1) {\n      this.skipBits(1); // delta_pic_order_always_zero_flag\n      this.skipEG(); // offset_for_non_ref_pic\n      this.skipEG(); // offset_for_top_to_bottom_field\n      numRefFramesInPicOrderCntCycle = this.readUEG();\n      for (i = 0; i < numRefFramesInPicOrderCntCycle; i++) {\n        this.skipEG(); // offset_for_ref_frame[ i ]\n      }\n    }\n\n    this.skipUEG(); // max_num_ref_frames\n    this.skipBits(1); // gaps_in_frame_num_value_allowed_flag\n    picWidthInMbsMinus1 = this.readUEG();\n    picHeightInMapUnitsMinus1 = this.readUEG();\n    frameMbsOnlyFlag = this.readBits(1);\n    if (frameMbsOnlyFlag === 0) {\n      this.skipBits(1); // mb_adaptive_frame_field_flag\n    }\n\n    this.skipBits(1); // direct_8x8_inference_flag\n    if (this.readBoolean()) { // frame_cropping_flag\n      frameCropLeftOffset = this.readUEG();\n      frameCropRightOffset = this.readUEG();\n      frameCropTopOffset = this.readUEG();\n      frameCropBottomOffset = this.readUEG();\n    }\n\n    if (this.readBoolean()) {\n      // vui_parameters_present_flag\n      if (this.readBoolean()) {\n        // aspect_ratio_info_present_flag\n        let sarRatio;\n        const aspectRatioIdc = this.readUByte();\n        switch (aspectRatioIdc) {\n          case 1: sarRatio = [1, 1]; break;\n          case 2: sarRatio = [12, 11]; break;\n          case 3: sarRatio = [10, 11]; break;\n          case 4: sarRatio = [16, 11]; break;\n          case 5: sarRatio = [40, 33]; break;\n          case 6: sarRatio = [24, 11]; break;\n          case 7: sarRatio = [20, 11]; break;\n          case 8: sarRatio = [32, 11]; break;\n          case 9: sarRatio = [80, 33]; break;\n          case 10: sarRatio = [18, 11]; break;\n          case 11: sarRatio = [15, 11]; break;\n          case 12: sarRatio = [64, 33]; break;\n          case 13: sarRatio = [160, 99]; break;\n          case 14: sarRatio = [4, 3]; break;\n          case 15: sarRatio = [3, 2]; break;\n          case 16: sarRatio = [2, 1]; break;\n          case 255: {\n            sarRatio = [this.readUByte() << 8 | this.readUByte(), this.readUByte() << 8 | this.readUByte()];\n            break;\n          }\n        }\n        if (sarRatio) {\n          sarScale = sarRatio[0] / sarRatio[1];\n        }\n      }\n    }\n\n    return {\n      width: Math.ceil((((picWidthInMbsMinus1 + 1) * 16) - frameCropLeftOffset * 2 - frameCropRightOffset * 2) * sarScale),\n      height: ((2 - frameMbsOnlyFlag) * (picHeightInMapUnitsMinus1 + 1) * 16) - ((frameMbsOnlyFlag ? 2 : 4) * (frameCropTopOffset + frameCropBottomOffset))\n    };\n  }\n\n  readSliceType() {\n    // skip NALu type\n    this.readUByte();\n    // discard first_mb_in_slice\n    this.readUEG();\n    // return slice_type\n    return this.readUEG();\n  }\n}\n\nexport default ExpGolomb;\n",
    "/***/\nimport ADTS from '../remux/aac-adts';\nimport Event from '../events';\nimport EventHandler from '../event-handler';\nimport ExpGolomb from './exp-golomb';\nimport MP4Remuxer from '../remux/mp4-remuxer';\nimport { logger } from '../utils/logger';\n\nclass H264Demuxer extends EventHandler {\n\n  constructor(jvp, config = null) {\n    super(jvp, Event.H264_DATA_PARSED);\n\n    this.config = this.jvp.config || config;\n    this.jvp = jvp;\n    this.id = 'main';\n\n    this.H264_TIMEBASE = 3000; //3000; // 3000->320 变成320后，画面有的迟顿效果\n    this.H264_TIMESCALE = 90000; // PTS/DTS的初始值，一般来源于录制的视频的频率，按照h264的设定是90HZ\n    this.AUDIO_TIMEBASE = 1024;\n    this.AUDIO_TIMESCALE = 8e3;\n    this.remuxer = new MP4Remuxer(this.jvp, this.id, this.config);\n\n    this.contiguous = true;\n    this.timeOffset = 1;\n    this.sn_video = 0;\n    this.sn_audio = 0;\n\n    this.codec = undefined;\n    this.avFlagIS = undefined;\n    this.hasCreatedSB = false;\n    this._videoTrack = { container: 'video/mp4', type: 'video', id: 1, sequenceNumber: 0, samples: [], len: 0, nbNalu: 0, dropped: 0, count: 0, duration: this.H264_TIMEBASE };\n    this._audioTrack = { container: \"video/mp4\", type: \"audio\", id: 2, sequenceNumber: 0, samples: [], len: 0, nbNalu: 0, dropped: 0, count: 0, duration: this.AUDIO_TIMEBASE, config: undefined };\n  }\n\n  destroy() {\n    EventHandler.prototype.destroy.call(this);\n  }\n\n  /////////////////////////////////////////////////////////////////////////////////////////////////\n\n  // { data: nal, avFlag: avFlag, isAudio: false, tss: tss, duration: duration }\n  onH264DataParsed(event) {\n    if (this.avFlagIS === undefined) {\n      this.avFlagIS = event.avFlag;\n    }\n\n    if (event.isAudio) {\n      this._parseAudioTrack(event.data, event.tss, event.duration);\n    }\n    else {\n      this._parseAVCTrack(event.data, event.tss, event.duration);\n    }\n\n    // 音视频\n    if (this.avFlagIS === 0) {\n      if (this._videoTrack.samples.length && this._audioTrack.config) {\n        this.remuxer.pushVideo2(0, this.sn_video, this._videoTrack, this._audioTrack, this.timeOffset, this.contiguous);\n        this.sn_video += 1;\n      }\n      if (this._audioTrack.samples.length) {\n        this.remuxer.pushAudio2(0, this.sn_video, this._audioTrack, this.timeOffset, this.contiguous);\n        this.sn_video += 1;\n      }\n    }\n    // 仅视频\n    else if (this.avFlagIS === 2) {\n      if (this._videoTrack.samples.length) {\n        this.remuxer.pushVideo(0, this.sn_video, this._videoTrack, this.timeOffset, this.contiguous);\n        this.sn_video += 1;\n      }\n    }\n    // 仅音频\n    else if (this.avFlagIS === 1) {\n      if (this._audioTrack.samples.length) {\n        this.remuxer.pushAudio(0, this.sn_audio, this._audioTrack, this.timeOffset, this.contiguous);\n        this.sn_audio += 1;\n      }\n    }\n  }\n\n  /////////////////////////////////////////////////////////////////////////////////////////////////\n\n  // 音频数据处理\n  _parseAudioTrack(array, tss, duration) {\n    var track_audio = this._audioTrack, samples_audio = track_audio.samples;\n\n    if (!track_audio.config) {\n      ADTS.initTrackConfig(track_audio, this, array, 0, this.codec);\n      this.AUDIO_TIMESCALE = track_audio.timescale = track_audio.samplerate;\n    }\n\n    tss = tss * this.AUDIO_TIMESCALE / 1000;\n    duration = duration * this.AUDIO_TIMESCALE / 1000;\n\n    // { offset, headerLength, frameLength, stamp }\n    var fhInfo = ADTS.parseFrameHeader(array, 0, tss, 0, 0);\n    if (!fhInfo) {\n      this.jvp.priintBinaryArray(array, 'Error AAC, total=' + array.byteLength + '; Array=');\n      return;\n    }\n    if (fhInfo.headerLength + fhInfo.frameLength != array.byteLength) {\n      this.jvp.priintBinaryArray(array, \"Audio\");\n      console.log('Error AAC, total=' + array.byteLength + '; offset=' + fhInfo.offset + '; headerLength=' + fhInfo.headerLength + '; frameLength=' + fhInfo.frameLength + '; stamp=' + fhInfo.stamp);\n      return;\n    }\n\n    var unitData = array.subarray(fhInfo.headerLength, array.byteLength);\n    var audioSamples = { units: { units: [{ data: unitData, type: 0 }], length: unitData.byteLength }, pts: tss, dts: tss, duration: duration, ts: this.AUDIO_TIMESCALE };\n    samples_audio.push(audioSamples);\n\n    track_audio.len += unitData.byteLength;\n    track_audio.nbNalu += 1;\n\n    // 檢查是否帶了音頻數據（这里添加音频解码类型，就必须在generateIS中加上相应的音频头，不然就会放不出来）\n    // 0=音视频 1=音频 2=视频\n    if (!this.hasCreatedSB && (this.avFlagIS === 0 || this.avFlagIS === 1)) {\n\n      if (this.avFlagIS === 0 && this._videoTrack.codec && track_audio.codec) {\n        this.hasCreatedSB = true;\n        this.codec = this._videoTrack.codec + ',' + track_audio.codec;\n        console.log(\"audio this.codec=\" + this.codec);\n        this.jvp.trigger(Event.BUFFER_RESET, { video: this._videoTrack, audio: track_audio });\n      }\n\n      if (this.avFlagIS === 1 && track_audio.codec) {\n        this.hasCreatedSB = true;\n        this.codec = track_audio.codec;\n        console.log(\"audio this.codec=\" + this.codec);\n        this.jvp.trigger(Event.BUFFER_RESET, { audio: track_audio });\n      }\n    }\n  }\n\n  // 视频数据处理\n  // array: nal二进制数组\n  // this._videoTrack = { container: 'video/mp4', type: 'video', id: 1, sequenceNumber: 0, samples: [], len: 0, nbNalu: 0, dropped: 0, count: 0, duration: this.H264_TIMEBASE };\n  // this._audioTrack = { container: \"video/mp4\", type: \"audio\", id: 2, sequenceNumber: 0, samples: [], len: 0, nbNalu: 0, dropped: 0, count: 0, duration: this.AUDIO_TIMEBASE, audiosamplerate: this.AUDIO_SAMPLERATE, timescale: this.AUDIO_TIMESCALE, config: this.config };\n  // avcSample = { units: { units: units2, length: length }, pts: tss, dts: tss, key: key }\n  _parseAVCTrack(array, tss, duration) {\n    var track = this._videoTrack,\n      samples = track.samples,\n      units = this._parseAVCNALu(array),  // { data: buffer, type: unitType, state: state }\n      units2 = [],\n      debug = false,\n      key = false,  // 是否关键帧\n      length = 0,\n      expGolombDecoder,\n      avcSample,\n      push;\n\n    tss = tss * this.H264_TIMESCALE / 1000;\n    duration = duration * this.H264_TIMESCALE / 1000;\n\n    var debugString = '';\n    var pushAccesUnit = function () {\n      if (units2.length) {\n        if (!this.config.forceKeyFrameOnDiscontinuity || key === true || (track.sps && (samples.length || this.contiguous))) {\n          avcSample = { units: { units: units2, length: length }, pts: tss, dts: tss, key: key, duration: duration }; // this.H264_TIMEBASE\n          samples.push(avcSample);\n          track.len += length;\n          track.nbNalu += units2.length;\n        } else {\n          track.dropped++;\n        }\n        units2 = [];\n        length = 0;\n      }\n    }.bind(this);\n\n    for (var i = 0; i < units.length; i++) {\n      var unit = units[i];\n      switch (unit.type) {\n        //NDR\n        case 1:\n          push = true;\n          if (debug) { debugString += 'NDR '; }\n          break;\n\n        //IDR\n        case 5:\n          push = true;\n          if (debug) { debugString += 'IDR '; }\n          key = true;\n          break;\n\n        //SEI\n        case 6:\n          unit.data = this._discardEPB(unit.data);\n          expGolombDecoder = new ExpGolomb(unit.data);\n          expGolombDecoder.readUByte();    // skip frameType\n          break;\n\n        //SPS\n        case 7:\n          push = false;\n          if (debug) { debugString += 'SPS '; }\n          if (!track.sps) {\n            expGolombDecoder = new ExpGolomb(unit.data);\n            var config = expGolombDecoder.readSPS();\n            track.width = config.width;\n            track.height = config.height;\n            track.sps = [unit.data];\n            track.duration = 0;\n\n            var codecarray = unit.data.subarray(1, 4);\n            var codecstring = 'avc1.';\n            for (var j = 0; j < 3; j++) {\n              var h = codecarray[j].toString(16);\n              if (h.length < 2) { h = '0' + h; }\n              codecstring += h;\n            }\n            track.codec = codecstring;\n\n            // 0=音视频 1=音频 2=视频\n            if (!this.hasCreatedSB) {\n\n              if (this.avFlagIS === 0 && this._videoTrack.codec && this._audioTrack.codec) {\n                this.hasCreatedSB = true;\n                this.codec = this._videoTrack.codec + ',' + this._audioTrack.codec;\n                console.log(\"video this.codec=\" + this.codec);\n                this.jvp.trigger(Event.BUFFER_RESET, { video: this._videoTrack, audio: this._audioTrack });\n              }\n\n              if (this.avFlagIS === 2 && this._videoTrack.codec) {\n                this.hasCreatedSB = true;\n                this.codec = this._videoTrack.codec;\n                console.log(\"video this.codec=\" + this.codec);\n                this.jvp.trigger(Event.BUFFER_RESET, { video: this._videoTrack });\n              }\n            }\n            push = true;\n          }\n          break;\n\n        //PPS\n        case 8:\n          push = false;\n          if (debug) { debugString += 'PPS '; }\n          if (!track.pps) {\n            track.pps = [unit.data];\n            push = true;\n          }\n          break;\n\n        case 9:\n          push = false;\n          if (debug) { debugString += 'AUD '; }\n          pushAccesUnit();\n          break;\n\n        default:\n          push = false;\n          debugString += 'unknown NAL ' + unit.type + ' ';\n          break;\n      }\n\n      if (push) {\n        units2.push(unit);\n        length += unit.data.byteLength;\n      }\n    }\n\n    if (debug || debugString.length) {\n      logger.log(debugString);\n    }\n\n    pushAccesUnit();\n  }\n\n  // unit = { data: array, type: lastUnitType }\n  _parseAVCNALu(array) {\n    var i = 0, len = array.byteLength, value, overflow, state = 0; //state = this.avcNaluState;\n    var units = [], unit, unitType, lastUnitStart, lastUnitType;\n    while (i < len) {\n      value = array[i++];\n      // finding 3 or 4-byte start codes (00 00 01 OR 00 00 00 01)\n      switch (state) {\n        case 0:\n          if (value === 0) {\n            state = 1;\n          }\n          break;\n        case 1:\n          if (value === 0) {\n            state = 2;\n          } else {\n            state = 0;\n          }\n          break;\n        case 2:\n        case 3:\n          if (value === 0) {\n            state = 3;\n          } else if (value === 1 && i < len) {\n            unitType = array[i] & 0x1f;\n            if (lastUnitStart) {\n              unit = { data: array.subarray(lastUnitStart, i - state - 1), type: lastUnitType };\n              units.push(unit);\n            } else {\n            }\n            lastUnitStart = i;\n            lastUnitType = unitType;\n            state = 0;\n          } else {\n            state = 0;\n          }\n          break;\n        default:\n          break;\n      }\n    }\n\n    if (lastUnitStart) {\n      unit = { data: array.subarray(lastUnitStart, len), type: lastUnitType, state: state };\n      units.push(unit);\n    }\n\n    return units;\n  }\n\n  /*** remove Emulation Prevention bytes from a RBSP */\n  _discardEPB(data) {\n    var length = data.byteLength, EPBPositions = [], i = 1;\n\n    // Find all `Emulation Prevention Bytes`\n    while (i < length - 2) {\n      if (data[i] === 0 &&\n        data[i + 1] === 0 &&\n        data[i + 2] === 0x03) {\n        EPBPositions.push(i + 2);\n        i += 2;\n      } else {\n        i++;\n      }\n    }\n\n    // If no Emulation Prevention Bytes were found just return the original array\n    if (EPBPositions.length === 0) {\n      return data;\n    }\n\n    // Create a new array to hold the NAL unit data\n    var newLength = length - EPBPositions.length;\n    var newData = new Uint8Array(newLength);\n    var sourceIndex = 0;\n\n    for (i = 0; i < newLength; sourceIndex++, i++) {\n      if (sourceIndex === EPBPositions[0]) {\n        // Skip this byte\n        sourceIndex++;\n        // Remove this position index\n        EPBPositions.shift();\n      }\n      newData[i] = data[sourceIndex];\n    }\n    return newData;\n  }\n}\n\nexport default H264Demuxer;\n\n",
    "/** H264 NAL Slicer */\nimport Event from '../events';\nimport EventHandler from '../event-handler';\nimport H264Demuxer from './h264-demuxer';\n\nclass H264NalSlicesReader extends EventHandler {\n\n    constructor(jvp, config = null) {\n        super(jvp, Event.H264_DATA_PARSING);\n\n        this.config = this.jvp.config || config;\n        this.h264Demuxer = new H264Demuxer(jvp);\n        this.jvp = jvp;\n        this.lastBuf = null;\n        this.nals = [];\n    }\n\n    destroy() {\n        this.lastBuf = null;\n        this.nals = [];\n        EventHandler.prototype.destroy.call(this);\n    }\n\n    /////////////////////////////////////////////////////////////////////////////////////////////////\n\n    // { type: 'video', data: data.payload, parent: 'main' }\n    onH264DataParsing(event) {\n        this._read(event.data);\n        var $this = this;\n        this.nals.forEach(function (nal) {\n            $this.jvp.trigger(Event.H264_DATA_PARSED, { data: nal, avFlag: event.avFlag });\n        });\n    }\n\n    /////////////////////////////////////////////////////////////////////////////////////////////////\n\n    _read(buffer) {\n        var typedAr = null;\n        this.nals = [];\n        if (!buffer || buffer.byteLength < 1) return;\n\n        // 合并断包\n        if (this.lastBuf) {\n            typedAr = new Uint8Array(buffer.byteLength + this.lastBuf.length);\n            typedAr.set(this.lastBuf);\n            typedAr.set(new Uint8Array(buffer), this.lastBuf.length);\n        } else {\n            typedAr = new Uint8Array(buffer);\n        }\n\n        // 0x00 00 00 01或0x00 00 00 00 01开头，为NAL单元开始标志\n        var lastNalEndPos = 0;\n        var b1 = -1; // byte before one\n        var b2 = -2; // byte before two\n        var nalStartPos = new Array();\n        for (var i = 0; i < typedAr.length; i += 2) {\n            var b_0 = typedAr[i];\n            var b_1 = typedAr[i + 1];\n            if (b1 == 0 && b_0 == 0 && b_1 == 0) {\n                nalStartPos.push(i - 1);\n            } else if (b_1 == 1 && b_0 == 0 && b1 == 0 && b2 == 0) {\n                nalStartPos.push(i - 2);\n            }\n            b2 = b_0;\n            b1 = b_1;\n        }\n\n        if (nalStartPos.length > 1) {\n            for (var j = 0; j < nalStartPos.length - 1; ++j) {\n                this.nals.push(typedAr.subarray(nalStartPos[j], nalStartPos[j + 1] + 1));\n                lastNalEndPos = nalStartPos[j + 1];\n            }\n        } else {\n            lastNalEndPos = nalStartPos[0];\n        }\n\n        // 缓存未形成完整nal单元的数据，以供下次合并后再解析\n        if (lastNalEndPos != 0 && lastNalEndPos < typedAr.length) {\n            this.lastBuf = typedAr.subarray(lastNalEndPos);\n        } else {\n            if (!this.lastBuf) { this.lastBuf = typedAr; }\n            var _newBuf = new Uint8Array(this.lastBuf.length + buffer.byteLength);\n            _newBuf.set(this.lastBuf);\n            _newBuf.set(new Uint8Array(buffer), this.lastBuf.length);\n            this.lastBuf = _newBuf;\n        }\n    }\n\n}\n\nexport default H264NalSlicesReader;",
    "/** */\nimport Event from '../events';\nimport EventHandler from '../event-handler';\n\nconst JTT1078_PACKAGING_FLAG = {\n  ATOM: 0x00,\n  FIRST: 0x01,\n  LAST: 0x02,\n  MIDDLE: 0x03\n};\n\nconst JT1078_PLAYLOAD_Type = {\n  G711A: 6,\n  G711U: 7,\n  G726: 8,\n  AAC: 19,\n  H264: 98,\n  H265: 99,\n  AVS: 100,\n  SAVC: 101\n};\n\nclass JTT1078Demuxer extends EventHandler {\n\n  constructor(jvp, config = null) {\n    super(jvp, Event.JTT1078_DATA_PARSED);\n\n    this.config = this.jvp.config || config;\n    this.jvp = jvp;\n    this.id = 'main';\n\n    this.packagesVideo = [];\n    this.packagesAudio = [];\n\n    this.findedIFrame = false;\n    this.initVideoTs = -1;\n    this.initAudioTs = -1;\n    this.lastVideoPackage = undefined;\n    this.lastAudioPackage = undefined;\n    this.sendingVideoPackage = []; // 待发送的视频包，用于控制必须大于音频的时间\n  }\n\n  destroy() {\n    EventHandler.prototype.destroy.call(this);\n  }\n\n  /////////////////////////////////////////////////////////////////////////////////////////////////\n\n  // { data: pkg, avFlag: data.avFlag }\n  // pkg = { v: v, p: p, x: x, cc: cc, m: m, pt: pt, sn: sn,\n  //   simNumber: simNumber,\n  //   channelId: channelId,\n  //   dataType: dataType,\n  //   packageFlag: packageFlag,\n  //   timestamp1: timestamp1,\n  //   timestamp2: timestamp2,\n  //   lastIFrameInterval: lastIFrameInterval,\n  //   lastPFrameInterval: lastPFrameInterval,\n  //   dataLength: dataLength,\n  //   dataBuffer: dataBuffer\n  // }\n  onJTT1078DataParsed(event) {\n    // 检查是否为I帧（向Video传输数据，第一帧必须为I帧，其它帧抛弃）\n    if (event.data.dataType == 0x00 && (event.data.packageFlag == JTT1078_PACKAGING_FLAG.ATOM || event.data.packageFlag == JTT1078_PACKAGING_FLAG.FIRST)) {\n      this.findedIFrame = true;\n    }\n    if (event.avFlag == 1) {\n      // 只放音频时，无须验证是否找到I帧\n      this.findedIFrame = true;\n    }\n    if (!this.findedIFrame) {\n      console.log('should finding first I data, the current package throwed.');\n      return;\n    }\n\n    // 透传数据，直接抛弃\n    if (event.data.dataType == 0x04) {\n      console.log(\"Recveived jtt1078 package is transparent data, skip it.\");\n      return;\n    }\n\n    // 音频数据处理\n    if (event.data.dataType == 0x03) {\n      if (event.data.pt != JT1078_PLAYLOAD_Type.AAC) {\n        console.log(\"Recveived audio package is not AAC Type! playload=\" + event.data.pt);\n        return;\n      }\n\n      switch (event.data.packageFlag) {\n        case JTT1078_PACKAGING_FLAG.ATOM:\n          this._assemblyAudioPackages(event.avFlag);\n          this._raiseH264DataParsedEvent(event.data, event.avFlag);\n          break;\n\n        case JTT1078_PACKAGING_FLAG.FIRST:\n          this._assemblyAudioPackages(event.avFlag);\n          this.packagesAudio.push(event.data);\n          break;\n\n        case JTT1078_PACKAGING_FLAG.MIDDLE:\n          this.packagesAudio.push(event.data);\n          break;\n\n        case JTT1078_PACKAGING_FLAG.LAST:\n          this.packagesAudio.push(event.data);\n          this._assemblyAudioPackages(event.avFlag);\n          break;\n\n        default: break;\n      }\n    }\n\n    // 视频数据处理，组合数据包\n    if (event.data.dataType == 0x00 || event.data.dataType == 0x01 || event.data.dataType == 0x02) {\n      if (event.data.pt != JT1078_PLAYLOAD_Type.H264) {\n        console.log(\"Recveived video package is not H264 Type! playload=\" + event.data.pt);\n        return;\n      }\n\n      switch (event.data.packageFlag) {\n        case JTT1078_PACKAGING_FLAG.ATOM:\n          this._assemblyVideoPackages(event.avFlag);\n          this._raiseH264DataParsedEvent(event.data, event.avFlag);\n          break;\n\n        case JTT1078_PACKAGING_FLAG.FIRST:\n          this._assemblyVideoPackages(event.avFlag);\n          this.packagesVideo.push(event.data);\n          break;\n\n        case JTT1078_PACKAGING_FLAG.MIDDLE:\n          this.packagesVideo.push(event.data);\n          break;\n\n        case JTT1078_PACKAGING_FLAG.LAST:\n          this.packagesVideo.push(event.data);\n          this._assemblyVideoPackages(event.avFlag);\n          break;\n\n        default: break;\n      }\n    }\n  }\n\n  _assemblyVideoPackages(avFlag) {\n    if (this.packagesVideo.length == 0) return;\n\n    var bigPkgSize = 0;\n    this.packagesVideo.forEach(function (d) { bigPkgSize += d.dataLength; });\n\n    var bigIdx = 0;\n    var bigPkgBuffer = new Uint8Array(bigPkgSize);\n    this.packagesVideo.forEach(function (d) {\n      bigPkgBuffer.set(d.dataBuffer, bigIdx);\n      bigIdx += d.dataLength;\n    });\n\n    var firstPkg = this.packagesVideo[0];\n    firstPkg.dataLength = bigPkgSize;\n    firstPkg.dataBuffer = bigPkgBuffer;\n    this._raiseH264DataParsedEvent(firstPkg, avFlag);\n\n    this.packagesVideo.slice(0, this.packagesVideo.length);\n    this.packagesVideo = [];\n  }\n\n  _assemblyAudioPackages(avFlag) {\n    if (this.packagesAudio.length == 0) return;\n\n    var bigPkgSize = 0;\n    this.packagesAudio.forEach(function (d) { bigPkgSize += d.dataLength; });\n\n    var bigIdx = 0;\n    var bigPkgBuffer = new Uint8Array(bigPkgSize);\n    this.packagesAudio.forEach(function (d) {\n      bigPkgBuffer.set(d.dataBuffer, bigIdx);\n      bigIdx += d.dataLength;\n    });\n\n    var firstPkg = this.packagesAudio[0];\n    firstPkg.dataLength = bigPkgSize;\n    firstPkg.dataBuffer = bigPkgBuffer;\n    this._raiseH264DataParsedEvent(firstPkg, avFlag);\n\n    this.packagesAudio.slice(0, this.packagesAudio.length);\n    this.packagesAudio = [];\n  }\n\n  _raiseH264DataParsedEvent(pkg, avFlag) {\n    // 缓存当前包，处理上一包（目的是为了得到druation，单位ms）\n    let isAudio = pkg.dataType == 0x03;\n    let nextPkg = pkg;\n    let currPkg = undefined;\n    let initTs = 0;\n    if (isAudio) {\n      if (!this.lastAudioPackage) {\n        this.lastAudioPackage = pkg;\n        this.initAudioTs = pkg.timestamp2;\n        return;\n      }\n\n      initTs = this.initAudioTs;\n      currPkg = this.lastAudioPackage;\n      this.lastAudioPackage = pkg;\n    }\n    else {\n      if (!this.lastVideoPackage) {\n        this.lastVideoPackage = pkg;\n        this.initVideoTs = pkg.timestamp2;\n        return;\n      }\n\n      initTs = this.initVideoTs;\n      currPkg = this.lastVideoPackage;\n      this.lastVideoPackage = pkg;\n    }\n    if (!currPkg) return;\n\n\n    let tss = currPkg.timestamp2 - initTs;                              // 计算当前包的tss  \n    let duration = Math.abs(nextPkg.timestamp2 - currPkg.timestamp2);   // 计算当前包的duration\n    let sending = {  data: currPkg.dataBuffer, avFlag: avFlag, isAudio: isAudio, tss: tss, duration: duration };\n    this.jvp.trigger(Event.H264_DATA_PARSED, sending); \n       \n    // let dataType = currPkg.dataType;\n    // let packageFlag = currPkg.packageFlag;\n    // var dataTypeText = dataType == 0x00 ? \"I\" : dataType == 0x01 ? \"P\" : dataType == 0x02 ? \"B\" : dataType == 0x03 ? \"A\" : dataType == 0x04 ? \"O\" : dataType;\n    // var packageFlagText = packageFlag == 0 ? \"Atom \" : packageFlag == 1 ? \"First\" : packageFlag == 2 ? \"Last \" : packageFlag == 3 ? \"Middl\" : \"Error\";\n    // console.log('read jtt1078 package: sn=' + currPkg.sn + '; tss=' + tss + '; duration=' + duration + '; type=' + dataTypeText + '(' + dataType + '); flag=' + packageFlagText + '(' + packageFlag + '); length=' + currPkg.dataLength + '; ts1=' + currPkg.timestamp1 + '; ts2=' + currPkg.timestamp2 + '; ifi=' + currPkg.lastIFrameInterval + '; pfi=' + currPkg.lastPFrameInterval);\n    //this.jvp.priintBinaryArray(dataBuffer, 'jtt1078 package:');\n  }\n}\n\nexport default JTT1078Demuxer;\n\n",
    "/** JTT1078 Package Reader */\nimport Event from '../events';\nimport EventHandler from '../event-handler';\nimport JTT1078Demuxer from './jtt1078-demuxer';\n\nconst JT1078_Data_Type = {\n    I: 0x00,\n    P: 0x01,\n    B: 0x02,\n    AUDIO: 0x03,\n    OTHER: 0x04\n};\n\nclass JTT1078PackageReader extends EventHandler {\n\n    constructor(jvp, config = null) {\n        super(jvp, Event.JTT1078_DATA_PARSING);\n\n        this.config = this.jvp.config || config;\n        this.jtt1078Demuxer = new JTT1078Demuxer(jvp);\n        this.jvp = jvp;\n\n        this.lastBuf = null;\n        this.packages = [];\n    }\n\n    destroy() {\n        this.lastBuf = null;\n        this.packages = [];\n        this.jtt1078Demuxer.destroy();\n        EventHandler.prototype.destroy.call(this);\n    }\n\n    /////////////////////////////////////////////////////////////////////////////////////////////////\n\n    // { data: copy, avFlag: this.avFlag }\n    onJTT1078DataParsing(event) {\n        this._read(event.data);\n        var $this = this;\n        this.packages.forEach(function (pkg) {\n            $this.jvp.trigger(Event.JTT1078_DATA_PARSED, { data: pkg, avFlag: event.avFlag });\n        });\n    }\n\n    /////////////////////////////////////////////////////////////////////////////////////////////////\n\n    _read(buffer) {\n        var typedAr = null;\n        this.packages = [];\n        if (!buffer || buffer.byteLength < 1) return;\n\n        // 合并断包\n        if (this.lastBuf) {\n            typedAr = new Uint8Array(buffer.byteLength + this.lastBuf.length);\n            typedAr.set(this.lastBuf);\n            typedAr.set(new Uint8Array(buffer), this.lastBuf.length);\n            this.lastBuf = null;\n        } else {\n            typedAr = new Uint8Array(buffer);\n        }\n\n        // 分析包        \n        for (var i = 0; i < typedAr.length; i += 1) {\n            if (typedAr[i] == 0x30 && typedAr[i + 1] == 0x31 && typedAr[i + 2] == 0x63 && typedAr[i + 3] == 0x64) {\n                let p = this._readPackage(typedAr, i);\n                if (p == null) {\n                    // 缓存未形成完整package单元的数据，以供下次合并后再解析\n                    this.lastBuf = typedAr.subarray(i);\n                }\n                else {\n                    this.packages.push(p);\n                }\n            }\n        }\n    }\n\n    // return package\n    _readPackage(buffer, startPos) {\n        // 至少30位数据，才能判断是否是一个完整包\n        if (buffer.length < startPos + 30) return null;\n\n        let idx = startPos + 4;\n        let v = buffer[idx] >> 6;\n        let p = buffer[idx] >> 5 & 0x01;\n        let x = buffer[idx] >> 4 & 0x01;\n        let cc = buffer[idx] & 0x0F;\n        idx++;\n\n        let m = buffer[idx] >> 7;\n        let pt = buffer[idx] & 0x7F;\n        idx++;\n\n        // 包序号\n        let sn = this._readWord(buffer, idx);\n        idx += 2;\n\n        // SIM卡号 BCD(根据协议决定它的长度，2011协议为6位，2019协议为10位)\n        // 这里不解析卡号，节省性能\n        let simLength = 6;\n        let simNumber = '';\n        if (this.jvp.config.jtt1078Version == '2019') simLength = 10;\n        //for (let i = 0; i < simLength; i++) {\n        //    simNumber += buffer[idx + i] >> 4;\n        //    simNumber += buffer[idx + i] & 0x0F;\n        //}\n        idx += simLength;\n\n        // 逻辑通道号 1\n        let channelId = buffer[idx++];\n\n        // 数据类型 + 分包处理标记 1\n        let dataType = buffer[idx] >> 4;\n        let packageFlag = buffer[idx] & 0x0F;\n        idx++;\n\n        // 时间戳\n        let timestamp = 0;\n        let timestamp1 = 0;\n        let timestamp2 = 0;\n        if (dataType != JT1078_Data_Type.OTHER) {\n            timestamp = this._readBigWord(buffer, idx);\n            timestamp1 = this._readDWord(buffer, idx);\n            timestamp2 = this._readDWord(buffer, idx + 4);\n            idx += 8;\n        }\n\n        // Last I Frame Interval 2、Last Frame Interval   2 \n        let lastIFrameInterval = 0;\n        let lastPFrameInterval = 0;\n        if (dataType == JT1078_Data_Type.I || dataType == JT1078_Data_Type.P || dataType == JT1078_Data_Type.B) {\n            lastIFrameInterval = this._readWord(buffer, idx);\n            lastPFrameInterval = this._readWord(buffer, idx + 2);\n            idx += 4;\n        }\n\n        // 数据长度 2，长度不超过950\n        let dataLength = this._readWord(buffer, idx);\n        idx += 2;\n\n        // H264数据\n        let dataBuffer = buffer.subarray(idx, idx + dataLength);\n\n        // 判断是否为完整包\n        if (buffer.length < startPos + 30 + dataLength) return null;\n\n        // if (dataType == JT1078_Data_Type.AUDIO) {\n        //    var dataTypeText = dataType == JT1078_Data_Type.I ? \"I\" : dataType == JT1078_Data_Type.P ? \"P\" : dataType == JT1078_Data_Type.B ? \"B\" : dataType == JT1078_Data_Type.AUDIO ? \"A\" : dataType == JT1078_Data_Type.OTHER ? \"O\" : dataType;\n        //    var packageFlagText = packageFlag == 0 ? \"Atom \" : packageFlag == 1 ? \"First\" : packageFlag == 2 ? \"Last \" : packageFlag == 3 ? \"Middl\" : \"Error\";\n        //    console.log('read jtt1078 package: sim=' + simNumber + '; sn=' + sn + '; pt=' + pt + '; type=' + dataTypeText + '(' + dataType + '); flag=' + packageFlagText + '(' + packageFlag + '); length=' + dataLength + '; ts1=' + timestamp1 + '; ts2=' + timestamp2 + '; ifi=' + lastIFrameInterval + '; pfi=' + lastPFrameInterval);\n        //    //this.jvp.priintBinaryArray(dataBuffer, 'jtt1078 package:');\n        // }\n        return {\n            v: v, p: p, x: x, cc: cc, m: m, pt: pt, sn: sn,\n            //simNumber: simNumber,\n            channelId: channelId,\n            dataType: dataType,\n            packageFlag: packageFlag,\n            timestamp1: timestamp1,\n            timestamp2: timestamp2,\n            lastIFrameInterval: lastIFrameInterval,\n            lastPFrameInterval: lastPFrameInterval,\n            dataLength: dataLength,\n            dataBuffer: dataBuffer\n        };\n    }\n\n    _readWord(buffer, startPos) {\n        let workingBytes = new Uint8Array(2);\n        workingBytes.set(buffer.subarray(startPos, startPos + 2));\n\n        let word = new DataView(workingBytes.buffer).getUint16(0);\n        return word;\n    }\n\n    _readDWord(buffer, startPos) {\n        let workingBytes = new Uint8Array(4);\n        workingBytes.set(buffer.subarray(startPos, startPos + 4));\n\n        let word = new DataView(workingBytes.buffer).getUint32(0);\n        return word;\n    }\n\n    _readBigWord(buffer, startPos) {\n        let workingBytes = new Uint8Array(8);\n        workingBytes.set(buffer.subarray(startPos, startPos + 8));\n\n        let word = new DataView(workingBytes.buffer).getBigUint64(0);\n        return word;\n    }\n}\n\nexport default JTT1078PackageReader;",
    "export const ErrorTypes = {\n  // Identifier for a network error (loading error / timeout ...)\n  NETWORK_ERROR: 'networkError',\n  // Identifier for a media Error (video/parsing/mediasource error)\n  MEDIA_ERROR: 'mediaError',\n  // Identifier for all other errors\n  OTHER_ERROR: 'otherError'\n};\n\nexport const ErrorDetails = {\n  // Identifier for a manifest load error - data: { url : faulty URL, response : { code: error code, text: error text }}\n  MANIFEST_LOAD_ERROR: 'manifestLoadError',\n  // Identifier for a manifest load timeout - data: { url : faulty URL, response : { code: error code, text: error text }}\n  MANIFEST_LOAD_TIMEOUT: 'manifestLoadTimeOut',\n  // Identifier for a manifest parsing error - data: { url : faulty URL, reason : error reason}\n  MANIFEST_PARSING_ERROR: 'manifestParsingError',\n  // Identifier for a manifest with only incompatible codecs error - data: { url : faulty URL, reason : error reason}\n  MANIFEST_INCOMPATIBLE_CODECS_ERROR: 'manifestIncompatibleCodecsError',\n\n\n  // Identifier for a level load error - data: { url : faulty URL, response : { code: error code, text: error text }}\n  LEVEL_LOAD_ERROR: 'levelLoadError',\n  // Identifier for a level load timeout - data: { url : faulty URL, response : { code: error code, text: error text }}\n  LEVEL_LOAD_TIMEOUT: 'levelLoadTimeOut',\n  // Identifier for a level switch error - data: { level : faulty level Id, event : error description}\n  LEVEL_SWITCH_ERROR: 'levelSwitchError',\n\n\n  // Identifier for an audio track load error - data: { url : faulty URL, response : { code: error code, text: error text }}\n  AUDIO_TRACK_LOAD_ERROR: 'audioTrackLoadError',\n  // Identifier for an audio track load timeout - data: { url : faulty URL, response : { code: error code, text: error text }}\n  AUDIO_TRACK_LOAD_TIMEOUT: 'audioTrackLoadTimeOut',\n\n\n  // Identifier for fragment load error - data: { frag : fragment object, response : { code: error code, text: error text }}\n  FRAG_LOAD_ERROR: 'fragLoadError',\n  // Identifier for fragment loop loading error - data: { frag : fragment object}\n  FRAG_LOOP_LOADING_ERROR: 'fragLoopLoadingError',\n  // Identifier for fragment load timeout error - data: { frag : fragment object}\n  FRAG_LOAD_TIMEOUT: 'fragLoadTimeOut',\n  // Identifier for a fragment decryption error event - data: parsing error description\n  FRAG_DECRYPT_ERROR: 'fragDecryptError',\n  // Identifier for a fragment parsing error event - data: parsing error description\n  FRAG_PARSING_ERROR: 'fragParsingError',\n\n\n  // Identifier for decrypt key load error - data: { frag : fragment object, response : { code: error code, text: error text }}\n  KEY_LOAD_ERROR: 'keyLoadError',\n  // Identifier for decrypt key load timeout error - data: { frag : fragment object}\n  KEY_LOAD_TIMEOUT: 'keyLoadTimeOut',\n\n\n  // Triggered when an exception occurs while adding a sourceBuffer to MediaSource - data : {  err : exception , mimeType : mimeType }\n  BUFFER_ADD_CODEC_ERROR: 'bufferAddCodecError',\n  // Identifier for a buffer append error - data: append error description\n  BUFFER_APPEND_ERROR: 'bufferAppendError',\n  // Identifier for a buffer appending error event - data: appending error description\n  BUFFER_APPENDING_ERROR: 'bufferAppendingError',\n  // Identifier for a buffer stalled error event\n  BUFFER_STALLED_ERROR: 'bufferStalledError',\n  // Identifier for a buffer full event\n  BUFFER_FULL_ERROR: 'bufferFullError',\n  // Identifier for a buffer seek over hole event\n  BUFFER_SEEK_OVER_HOLE: 'bufferSeekOverHole',\n\n  \n  // Identifier for an internal exception happening inside hls.js while handling an event\n  INTERNAL_EXCEPTION: 'internalException'\n};\n",
    "/*** All objects in the event handling chain should inherit from this class **/\nimport Event from './events';\n\nclass EventHandler {\n\n  constructor(jvp, ...events) {\n    this.jvp = jvp;\n    this.onEvent = this.onEvent.bind(this);\n    this.handledEvents = events;\n    this.useGenericHandler = true;\n\n    this.registerListeners();\n  }\n\n  destroy() {\n    this.unregisterListeners();\n  }\n\n  /////////////////////////////////////////////////////////////////////////////////////////////////\n\n  isEventHandler() {\n    return typeof this.handledEvents === 'object' && this.handledEvents.length && typeof this.onEvent === 'function';\n  }\n\n  registerListeners() {\n    if (this.isEventHandler()) {\n      this.handledEvents.forEach(function (event) {\n        if (event === 'jvpEventGeneric') {\n          console.log('Forbidden event name: ' + event);\n        }\n        this.jvp.on(event, this.onEvent);\n      }.bind(this));\n    }\n  }\n\n  unregisterListeners() {\n    if (this.isEventHandler()) {\n      this.handledEvents.forEach(function (event) {\n        this.jvp.off(event, this.onEvent);\n      }.bind(this));\n    }\n  }\n\n  /////////////////////////////////////////////////////////////////////////////////////////////////\n\n  /*** arguments: event (string), data (any) */\n  onEvent(event, data) {\n    this.onEventGeneric(event, data);\n  }\n\n  onEventGeneric(event, data) {\n    var eventToFunction = function (event, data) {\n      var funcName = 'on' + event.replace('jvp', '');\n      if (typeof this[funcName] !== 'function') {\n        console.log(`Event ${event} has no generic handler in this ${this.constructor.name} class (tried ${funcName})`);\n      }\n      return this[funcName].bind(this, data);\n    };\n\n    try {\n      eventToFunction.call(this, event, data).call();\n    } catch (err) {\n      console.log(`internal error happened while processing ${event}:${err.message}`);\n    }\n  }\n}\n\nexport default EventHandler;\n",
    "module.exports = {\n\n  UI_WAITING: 'jvpWaiting',\n  UI_PLAYING: 'jvpPlaying',\n  UI_EVENT: 'jvpEvent',\n  UI_TIME_UPDATE: 'jvpTimeUpdate',\n\n  /////////////////////////////////////////////////////////////////////////////////////////////////\n\n  MEDIA_ATTACHING: 'jvpMediaAttaching',\n\n  MEDIA_ATTACHED: 'jvpMediaAttached',\n\n  /////////////////////////////////////////////////////////////////////////////////////////////////\n\n  WEBSOCKET_ATTACHING: 'jvpWebsocketAttaching',\n\n  WEBSOCKET_ATTACHED: 'jvpWebsocketAttached',\n\n  WEBSOCKET_DATA_UPLOADING: 'jvpWebsocketDataUploading',\n\n  /////////////////////////////////////////////////////////////////////////////////////////////////\n\n  BUFFER_CREATED: 'jvpBufferCreated',\n\n  BUFFER_APPENDING: 'jvpBufferAppending',\n\n  BUFFER_RESET: 'jvpBufferReset',\n\n  /////////////////////////////////////////////////////////////////////////////////////////////////\n\n  FRAG_LOADING: 'jvpFragLoading',\n\n  FRAG_PARSING_DATA: 'jvpFragParsingData',\n\n  FRAG_PARSING_INIT_SEGMENT: 'jvpFragParsingInitSegment',\n\n  /////////////////////////////////////////////////////////////////////////////////////////////////\n\n  H264_DATA_PARSING: 'jvpH264DataParsing',\n\n  H264_DATA_PARSED: 'jvpH264DataParsed',\n\n  /////////////////////////////////////////////////////////////////////////////////////////////////\n\n  JTT1078_DATA_PARSING: 'jvpJTT1078DataParsing',\n\n  JTT1078_DATA_PARSED: 'jvpJTT1078DataParsed',\n\n  /////////////////////////////////////////////////////////////////////////////////////////////////\n\n};\n",
    "\nmodule.exports = require('./jvp.js').default;\n",
    "/*** JVP interface, Apex Hu 2021.07.16 */\n'use strict';\n\nimport Event from './events';\nimport FlowController from './controller/flow-controller';\nimport BufferController from './controller/buffer-controller';\nimport EventEmitter from 'events';\nimport AudioRecorder from './loader/audio-recorder';\nimport WebsocketLoader from './loader/websocket-loader';\n\nclass Jvp {\n\n  static get version() {\n    // replaced with browserify-versionify transform\n    return '0.1.0' + 'v.0.0.0.1';\n  }\n\n  static isSupported() {\n    return (window.MediaSource && typeof window.MediaSource.isTypeSupported === 'function' && window.MediaSource.isTypeSupported('video/mp4; codecs=\"avc1.42c01f,mp4a.40.2\"'));\n  }\n\n  static get Events() {\n    return Event;\n  }\n\n  static get DefaultConfig() {\n    if (!Jvp.defaultConfig) {\n      Jvp.defaultConfig = {\n        // autoStartLoad: true,\n        // startPosition: -1,\n        debug: false,\n        // fLoader: undefined,\n        // loader: XhrLoader,\n        //loader: FetchLoader,\n        // fmp4FileUrl: 'xxxx.mp4',\n        // fragLoadingTimeOut: 20000,\n        // fragLoadingMaxRetry: 6,\n        // fragLoadingRetryDelay: 1000,\n        // fragLoadingMaxRetryTimeout: 64000,\n        // fragLoadingLoopThreshold: 3,\n        // forceKeyFrameOnDiscontinuity: true,\n        // appendErrorMaxRetry: 3,\n        jtt1078Version: '2011',   // 2011、2019\n        onWaiting: undefined,     // callback func\n        onPlaying: undefined,     // callback func\n        onEvent: undefined,       // callback func\n        onError: undefined,       // callback func\n        onTimeUpdate: undefined   // callback func\n      };\n    }\n    return Jvp.defaultConfig;\n  }\n\n  static set DefaultConfig(defaultConfig) {\n    Jvp.defaultConfig = defaultConfig;\n  }\n\n  /////////////////////////////////////////////////////////////////////////////////////////////////\n\n  constructor(config = {}) {\n\n    var defaultConfig = Jvp.DefaultConfig;\n    for (var prop in defaultConfig) {\n      if (prop in config) { continue; }\n      config[prop] = defaultConfig[prop];\n    }\n    this.config = config;\n\n    // observer setup\n    var observer = this.observer = new EventEmitter();\n    observer.trigger = function trigger(event, ...data) {\n      observer.emit(event, event, ...data);\n    };\n    observer.off = function off(event, ...data) {\n      observer.removeListener(event, ...data);\n    };\n    this.on = observer.on.bind(observer);\n    this.off = observer.off.bind(observer);\n    this.trigger = observer.trigger.bind(observer);\n\n    this.flowController = new FlowController(this);\n    this.bufferController = new BufferController(this);\n    this.websocketLoader = new WebsocketLoader(this);\n    this.mediaType = undefined;\n    this.audioRecorder = undefined;\n\n    // 浏览器类型\n    this.browserType = 0;\n    if (navigator.userAgent.toLowerCase().indexOf(\"msie\") !== -1) {\n      this.browserType = 0;\n    }\n    if (navigator.userAgent.toLowerCase().indexOf(\"firefox\") !== -1) {\n      this.browserType = 1;\n    }\n    if (navigator.userAgent.toLowerCase().indexOf(\"chrome\") !== -1) {\n      this.browserType = 2;\n    }\n    if (navigator.userAgent.toLowerCase().indexOf(\"edge\") !== -1) {\n      this.browserType = 3;\n    }\n\n    // 注册本地事件    \n    this.on(Event.UI_WAITING, this.onWaiting.bind(this));\n    this.on(Event.UI_PLAYING, this.onPlaying.bind(this));\n    this.on(Event.UI_EVENT, this.onEvent.bind(this));\n    this.on(Event.UI_TIME_UPDATE, this.onTimeUpdate.bind(this));\n    this.on(Event.ERROR, this.onError.bind(this));\n  }\n\n  destroy() {\n    this.flowController.destroy();\n    this.bufferController.destroy();\n    this.websocketLoader.destroy();\n    if (this.audioRecorder) this.audioRecorder.destroy();\n  }\n\n  /////////////////////////////////////////////////////////////////////////////////////////////////\n\n  onWaiting() {\n    if (this.config.onWaiting) this.config.onWaiting(this);\n  }\n\n  onPlaying() {\n    if (this.config.onPlaying) this.config.onPlaying(this);\n  }\n\n  onEvent(eventName) {\n    if (this.config.onEvent) this.config.onEvent(this, eventName);\n  }\n\n  // currentTime: seconds\n  onTimeUpdate(eventName, data) {\n    if (this.config.onTimeUpdate) this.config.onTimeUpdate(this, eventName, data.currentTime, data.receivedBytesPerSecond, data.uploadBytesPerSecond);\n  }\n\n  onError(data) {\n    if (this.config.onError) this.config.onError(this, data);\n  }\n\n  /////////////////////////////////////////////////////////////////////////////////////////////////\n\n  attachMedia(media, channelName = 'chX', mediaType = 'H264Raw', websocketProtocol = 'http', websocketIP, websocketPort, websocketName, wsParams) { // 'H264Raw' 'FMp4' 'JTT1078'\n    this.trigger(Event.UI_WAITING, {});\n    this.mediaType = mediaType;\n    this.media = media;\n    this.trigger(Event.MEDIA_ATTACHING, { media: media, channelName: channelName, mediaType: mediaType, websocketProtocol: websocketProtocol, websocketIP: websocketIP, websocketPort: websocketPort, websocketName: websocketName, wsParams: wsParams });\n  }\n\n  startCommunication() {\n    if (!this.audioRecorder) {\n      AudioRecorder.get(this, this.config, function (rec) {\n        this.audioRecorder = rec;\n        this.audioRecorder.start();\n      }.bind(this));\n    }\n  }\n\n  stopCommunication() {\n    if (this.audioRecorder) {\n      this.audioRecorder.stop();\n      this.audioRecorder.destroy();\n      this.audioRecorder = undefined;\n    }\n  }\n\n  priintBinaryArray(array, prevText) {\n    var idx = 0;\n    while (true) {\n      var startIdx = idx * 1000;\n      var endIdx = (idx + 1) * 1000 - 1;\n      if (endIdx >= array.length) endIdx = array.length - 1;\n      if (startIdx >= array.length) break;\n\n      var result = \"\";\n      for (var i = startIdx; i <= endIdx; i++) {\n        var char = array[i].toString(16).toUpperCase();\n        if (char.length == 1) result += '0' + char; else result += char;\n      }\n      console.log(prevText + ' Array ' + idx + ': ' + result);\n      idx++;\n    }\n  }\n}\n\nexport default Jvp;\n",
    "import Event from '../events';\r\nimport EventHandler from '../event-handler';\r\n\r\nclass AudioRecorder extends EventHandler {\r\n\r\n    constructor(jvp, config, stream) {\r\n        super(jvp);\r\n\r\n        window.URL = window.URL || window.webkitURL;\r\n        navigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.msGetUserMedia;\r\n\r\n        this.config = config || {};\r\n        this.config.sampleBits = config.sampleBits || 16;\r\n        this.config.sampleRate = config.sampleRate || 8e3;\r\n        this.context = new (window.webkitAudioContext || window.AudioContext || window.mozAudioContext || window.msAudioContext)();\r\n\r\n        this.audioInput = this.context.createMediaStreamSource(stream);\r\n        this.createScript = this.context.createScriptProcessor || this.context.createJavaScriptNode;\r\n        this.recorder = this.createScript.apply(this.context, [4096, 1, 1]);\r\n        console.log(\"input sampleRate=\" + this.context.sampleRate + \" output sampleRate=\" + config.sampleRate + \" outBits=\" + config.sampleBits);\r\n\r\n        // 判断端字节序\r\n        this.littleEdian = (function () {\r\n            let buffer = new ArrayBuffer(2);\r\n            new DataView(buffer).setInt16(0, 256, true);\r\n            return new Int16Array(buffer)[0] === 256;\r\n        })();\r\n\r\n        this.timer = null;\r\n        this.duration = 0;\r\n        this.volumn = 0;\r\n        this.audioData = {\r\n            size: 0,\r\n            buffer: [],\r\n            inputSampleRate: this.context.sampleRate,\r\n            inputSampleBits: 16,\r\n            outputSampleRate: config.sampleRate,\r\n            oututSampleBits: config.sampleBits,\r\n            seq1078: 0,\r\n\r\n            input: function (data) {\r\n                this.buffer.push(new Float32Array(data));\r\n                this.size += data.length;\r\n            },\r\n\r\n            /**数据合并压缩\r\n             * 根据输入和输出的采样率压缩数据，\r\n             * 比如输入的采样率是48k的，我们需要的是（输出）的是8k的，由于48k与8k是6倍关系，所以输入数据中每隔6取1位 */\r\n            compress: function () {\r\n                var idx = 0;\r\n                var blob = new Float32Array(this.size);\r\n                for (var i = 0; i < this.buffer.length; i++) {\r\n                    blob.set(this.buffer[i], idx);\r\n                    idx += this.buffer[i].length;\r\n                }\r\n                this.buffer = [];\r\n                this.size = 0;\r\n\r\n                var outputStep = parseInt(this.inputSampleRate / this.outputSampleRate);\r\n                var outputLenght = Math.floor(blob.length / outputStep); // blob.length / outputStep;\r\n                var output = new Float32Array(outputLenght);\r\n                var idx1 = 0, idx2 = 0;\r\n                while (idx1 < outputLenght) {\r\n                    output[idx1] = blob[idx2];\r\n                    idx2 += outputStep;\r\n                    idx1++;\r\n                }\r\n                return output;\r\n            },\r\n\r\n            encodeWAV: function (littleEdian) {\r\n                var numChannels = 1;\r\n                var sampleRate = Math.min(this.inputSampleRate, this.outputSampleRate);\r\n                var sampleBits = Math.min(this.inputSampleBits, this.oututSampleBits);\r\n                var samples = this.compress();\r\n                var samplesLength = samples.length * (sampleBits / 8);\r\n                var buffer = new ArrayBuffer(44 + samplesLength);\r\n                var view = new DataView(buffer);\r\n\r\n                var idx = 0;\r\n                var w2s = function (txt) {\r\n                    for (var i = 0; i < txt.length; i++) {\r\n                        view.setUint8(idx + i, txt.charCodeAt(i));\r\n                    }\r\n                };\r\n\r\n                w2s(\"RIFF\"); idx += 4;                                      /* RIFF identifier */\r\n                view.setUint32(idx, 36 + samplesLength, true); idx += 4;    /* RIFF chunk length */\r\n                w2s(\"WAVE\"); idx += 4;                                      /* RIFF type */\r\n\r\n                w2s(\"fmt \"); idx += 4;                                                              /* format chunk identifier */\r\n                view.setUint32(idx, 16, true); idx += 4;                                            /* format chunk length */\r\n                view.setUint16(idx, 1, true); idx += 2;                                             /* sample format (raw) */\r\n                view.setUint16(idx, numChannels, true); idx += 2;                                   /* channel count */\r\n                view.setUint32(idx, sampleRate, true); idx += 4;                                    /* sample rate */\r\n                view.setUint32(idx, numChannels * sampleRate * (sampleBits / 8), true); idx += 4;   /* byte rate (sample rate * block align) */\r\n                view.setUint16(idx, numChannels * (sampleBits / 8), true); idx += 2;                /* block align (channel count * bytes per sample) */\r\n                view.setUint16(idx, sampleBits, true); idx += 2;                                    /* bits per sample */\r\n\r\n                w2s(\"data\"); idx += 4;                                  /* data chunk identifier */\r\n                view.setUint32(idx, samplesLength, true); idx += 4;     /* data chunk length */\r\n                this.floatTo16BitPCM(view, idx, samples, littleEdian);\r\n                // if (sampleBits === 8) {\r\n                //     for (var i = 0; i < samples.length; i++, idx++) {\r\n                //         var h = Math.max(-1, Math.min(1, samples[i]));\r\n                //         var c = h < 0 ? h * 0x8000 : h * 0x7FFF;\r\n                //         c = parseInt(0xFF / (0xFFFF / (c + 0x8000)));\r\n                //         view.setInt8(idx, c, true);\r\n                //     }\r\n                // }\r\n                // else {\r\n                //     for (var i = 0; i < samples.length; i++, idx += 2) {\r\n                //         var y = Math.max(-1, Math.min(1, samples[i]));\r\n                //         view.setInt16(idx, y < 0 ? y * 0x8000 : y * 0x7FFF, littleEdian);\r\n                //     }\r\n                // }\r\n\r\n                return new Blob([view], { type: \"audio/wav\" });\r\n            },\r\n\r\n            encodePCM: function (littleEdian) {\r\n                var bytes = this.compress();\r\n                if (bytes.length <= 0) return undefined;\r\n\r\n                var sampleBits = 16;\r\n                var samplesLength = bytes.length * (sampleBits / 8);\r\n                var data = new Uint8Array(samplesLength);\r\n                var view = new DataView(data.buffer);\r\n\r\n                // 数据体\r\n                this.floatTo16BitPCM(view, 0, bytes, littleEdian);\r\n                return data;\r\n            },\r\n\r\n            floatTo16BitPCM: function (output, offset, input, littleEdian) {\r\n                for (let i = 0; i < input.length; i++, offset += 2) {\r\n                    let s = Math.max(-1, Math.min(1, input[i]));\r\n                    output.setInt16(offset, s < 0 ? s * 0x8000 : s * 0x7FFF, littleEdian);\r\n                }\r\n            }\r\n        };\r\n    }\r\n\r\n    destroy() {\r\n        EventHandler.prototype.destroy.call(this);\r\n    }\r\n\r\n    /////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    static get(jvp, config, callback) {\r\n        if (navigator.getUserMedia) {\r\n            navigator.getUserMedia(\r\n                { audio: true }, //只启用音频\r\n                function (stream) {\r\n                    var rec = new AudioRecorder(jvp, config, stream);\r\n                    if (callback) callback(rec);\r\n                },\r\n                function (error) {\r\n                    switch (error.code || error.name) {\r\n                        case 'PERMISSION_DENIED':\r\n                        case 'PermissionDeniedError':\r\n                            console.log('用户拒绝提供信息。');\r\n                            break;\r\n                        case 'NOT_SUPPORTED_ERROR':\r\n                        case 'NotSupportedError':\r\n                            console.log('浏览器不支持硬件设备。');\r\n                            break;\r\n                        case 'MANDATORY_UNSATISFIED_ERROR':\r\n                        case 'MandatoryUnsatisfiedError':\r\n                            console.log('无法发现指定的硬件设备。');\r\n                            break;\r\n                        default:\r\n                            console.log('无法打开麦克风。异常信息:' + (error.code || error.name));\r\n                            break;\r\n                    }\r\n                });\r\n        } else {\r\n            console.log('当前浏览器不支持录音功能。');\r\n            return;\r\n        }\r\n    }\r\n\r\n    /////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    start() {\r\n        this.audioInput.connect(this.recorder);\r\n        this.recorder.connect(this.context.destination);\r\n        this.duration = 0;\r\n        var the = this;\r\n        this.sendMsg(the);\r\n\r\n        // 音频采集\r\n        this.recorder.onaudioprocess = function (e) {\r\n            let lData = e.inputBuffer.getChannelData(0)\r\n            // 统计录音时长\r\n            the.duration += 4096 / the.context.sampleRate;\r\n            // 计算音量百分比\r\n            the.volumn = Math.max.apply(Math, lData) * 100;\r\n            the.audioData.input(lData);\r\n        };\r\n    }\r\n\r\n    stop() {\r\n        if (this.timer) clearInterval(this.timer);\r\n        this.recorder.disconnect();\r\n    }\r\n\r\n    sendMsg(the) {\r\n        this.timer = setInterval(function () {\r\n            var e = the.audioData.encodePCM(the.littleEdian);\r\n            if (e) the.jvp.trigger(Event.WEBSOCKET_DATA_UPLOADING, { duration: the.duration, volumn: the.volumn, data: e.buffer });\r\n        }, 300);\r\n    }\r\n\r\n    //获取音频文件\r\n    getBlob() {\r\n        this.stop();\r\n        return audioData.encodeWAV();\r\n    }\r\n\r\n    //回放\r\n    play(audio) {\r\n        audio.src = window.URL.createObjectURL(this.getBlob());\r\n    }\r\n\r\n    /** 下载录音的wav数据\r\n     * @param {blob}   需要下载的blob数据类型\r\n     * @param {string} [name='recorder']    重命名的名字     */\r\n    downloadWAV(wavblob, name = 'recorder') {\r\n        _download(wavblob, name, 'wav');\r\n    }\r\n\r\n    /** 下载录音pcm数据\r\n     * @param {blob}   需要下载的blob数据类型\r\n     * @param {string} [name='recorder']    重命名的名字\r\n     * @memberof Recorder     */\r\n    downloadPCM(pcmBlob, name = 'recorder') {\r\n        var e = this.audioData.encodePCM(this.littleEdian);\r\n        _download(pcmBlob, name, 'pcm');\r\n    }\r\n\r\n    /////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /** 下载录音文件\r\n     * @private\r\n     * @param {*} blob      blob数据\r\n     * @param {string} name 下载的文件名\r\n     * @param {string} type 下载的文件后缀 */\r\n    _download(blob, name, type) {\r\n        let oA = document.createElement('a');\r\n\r\n        oA.href = window.URL.createObjectURL(blob);\r\n        oA.download = `${name}.${type}`;\r\n        oA.click();\r\n    }\r\n}\r\n\r\nexport default AudioRecorder;",
    "/** Websocket Loader */\n\nimport Event from '../events';\nimport EventHandler from '../event-handler';\nimport H264NalSlicesReader from '../demux/h264-nal-slicesreader.js';\nimport JTT1078PackageReader from '../demux/jtt1078-package-reader.js';\n\nclass WebsocketLoader extends EventHandler {\n\n  constructor(jvp) {\n    super(jvp, Event.WEBSOCKET_ATTACHING, Event.WEBSOCKET_DATA_UPLOADING, Event.WEBSOCKET_MESSAGE_SENDING)\n    this.slicesReader = new H264NalSlicesReader(jvp);\n    this.packageReader = new JTT1078PackageReader(jvp);\n    this.mediaType = undefined;\n    this.channelName = undefined;\n    this.websocketName = undefined;\n    this.avFlag = 0; // 0=音视频 1=音频 2=视频\n\n    this._msrLastTimeBufferSize = 0;\n\n    this._seconds = 0;\n    this._sendBytes = 0;\n    this._receivedBytes = 0;\n    this._updateTimer = undefined;\n\n    this._audioVolumn = 0;\n    this._audioDuration = 0;\n  }\n\n  destroy() {\n    if (this.client instanceof WebSocket) {\n      this.client.close();\n      console.log(\"Websocket close!!!\");\n    } else {\n      this.client.abort();\n      console.log(\"XMLHttpRequest abort!!!\");\n    }\n    this.stopUpdateTimer();\n    this.slicesReader.destroy();\n    this.packageReader.destroy();\n    EventHandler.prototype.destroy.call(this);\n  }\n\n  /////////////////////////////////////////////////////////////////////////////////////////////////\n\n  onWebsocketAttaching(data) {\n    this.mediaType = data.mediaType;\n    this.channelName = data.channelName;\n    this.websocketName = data.websocketName;\n\n    // 从URL中获取音视频标志：0=音视频 1=音频 2=视频\n    var wnArray = this.websocketName.split(\".\");\n    if (wnArray.length >= 4) {\n      this.avFlag = parseInt(wnArray[3]);\n      console.log(\"onWebsocketAttaching register avFlag is \" + this.avFlag);\n    }\n\n    // 创建数据接收\n    if (data.websocket instanceof WebSocket) {\n      this.client = data.websocket;\n      this.client.onopen = this.initSocketClient.bind(this);\n      this.client.onerror = function (e) {\n        console.log('WebSocket发生错误')\n        console.log(e)\n      }\n      this.client.onclose = function (e) {\n        console.log('websocket Disconnected: ' + e.code + ' ' + e.reason + ' ' + e.wasClean)\n        console.log(e)\n      };\n    }\n    else if (data.websocket instanceof XMLHttpRequest) {\n      this.client = data.websocket;\n      if (this.jvp.browserType == 0) { // msie\n        var a = this._reader = new self.MSStreamReader();\n        a.onprogress = this._msrOnProgress.bind(this);\n        a.onload = function (e) { console.log(\"http _msrOnLoad()\"); };\n        a.onerror = function (e) { console.log(\"http _msrOnError()\"); };\n\n        this.client.responseType = \"ms-stream\";\n        this.client.onreadystatechange = this.receiveSocketMessageHttp.bind(this);\n        this.client.ontimeout = function (e) { console.log(\"XMLHttpRequest ontimeout Disconnected!\"); };\n        this.client.onerror = function (e) { console.log(\"XMLHttpRequest onerror Disconnected!\"); };\n        this.client.send(null);\n        console.log(\"XMLHttpRequest reg callback handle func OK, browserType=\" + this.jvp.browserType);\n      }\n      else if (this.jvp.browserType == 1) {\n        this.client.responseType = \"moz-chunked-arraybuffer\";\n        this.client.onprogress = this.receiveSocketMessageHttp.bind(this);\n        this.client.ontimeout = function (e) { console.log(\"XMLHttpRequest ontimeout Disconnected!\"); };\n        this.client.onerror = function (e) { console.log(\"XMLHttpRequest onerror Disconnected!\"); };\n        this.client.send(null);\n        console.log(\"XMLHttpRequest reg callback handle func OK, browserType=\" + this.jvp.browserType);\n      }\n      else {\n        this.client.responseType = \"moz-chunked-arraybuffer\";\n        this.client.onprogress = this.receiveSocketMessageHttp.bind(this);\n        this.client.ontimeout = function (e) { console.log(\"XMLHttpRequest ontimeout Disconnected!\"); };\n        this.client.onerror = function (e) { console.log(\"XMLHttpRequest onerror Disconnected!\"); };\n        this.client.send(null);\n        console.log(\"XMLHttpRequest reg callback handle func OK, browserType=\" + this.jvp.browserType);\n      }\n    }\n    else if (data.websocket.indexOf(\"http\") != -1 && this.jvp.browserType == 2) {\n      this.client = data.websocket;\n      const processResponse = function (response) {\n        this.startUpdateTimer();\n\n        const reader = response.body.getReader();\n        const processReceived = function (result) {\n          if (result.done) {\n            console.log(\"Fetch complete OVER\");\n            return;\n          }\n          if (!result.done && result.value) {\n            this.receiveSocketMessage({ data: result.value });\n          }\n          return reader.read().then(processReceived.bind(this));\n        }\n        reader.read().then(processReceived.bind(this));\n      };\n\n      console.log(\"http chrome fetch Starting...\");\n      fetch(data.websocket, { method: \"get\", mode: 'cors' }).then(processResponse.bind(this)).catch((error) => { console.log(error); });\n    }\n    else {\n      console.log(\"mediaType Exception, so create client event handle func FAIL! mediaType=\" + this.mediaType);\n    }\n  }\n\n  // { duration: the.duration, volumn: the.volumn, data: e.buffer }\n  onWebsocketDataUploading(event) {\n    this._audioVolumn = event.volumn;\n    this._audioDuration = event.duration;\n\n    if (this.client instanceof WebSocket) {\n      this.client.send(event.data);\n      this._sendBytes += event.data.byteLength;\n      //this.jvp.priintBinaryArray(new Uint8Array(event.data, 0), 'Duration: ' + this._audioDuration + ', Uploading');\n    }\n    else if (this.client instanceof XMLHttpRequest) {\n      this.client.send(event.data);\n      this._sendBytes += event.data.byteLength;\n    }\n    else {\n      console.log(\"mediaType Exception, so create client event handle func FAIL! mediaType=\" + this.mediaType);\n    }\n  }\n\n  /////////////////////////////////////////////////////////////////////////////////////////////////\n\n  initSocketClient(client) {\n    this.client.binaryType = 'arraybuffer';\n    this.client.onmessage = this.receiveSocketMessage.bind(this);\n\n    this.startUpdateTimer();\n    console.log('Websocket Open And reg receiveSocketMessage handle func OK!');\n  }\n\n  startUpdateTimer() {\n    this.stopUpdateTimer();\n    this._updateTimer = setInterval(function () {\n      let sendBytes = this._sendBytes;\n      let receivedBytes = this._receivedBytes;\n      this._sendBytes = 0;\n      this._receivedBytes = 0;\n      this._seconds++;\n      this.jvp.trigger(Event.UI_TIME_UPDATE, { eventName: 'Updating', currentTime: this._seconds, receivedBytesPerSecond: receivedBytes, uploadBytesPerSecond: sendBytes, audioDuration: this._audioDuration, audioVolumn: this._audioVolumn });\n\n    }.bind(this), 1000);\n  }\n\n  stopUpdateTimer() {\n    if (this._updateTimer) clearInterval(this._updateTimer);\n    this._updateTimer = undefined;\n  }\n\n  receiveSocketMessage(event) {\n    if (document['hidden']) return;\n\n    var copy = new Uint8Array(event.data);\n    this._receivedBytes += copy.byteLength;\n    if (this.mediaType === 'FMp4') {\n      this.jvp.trigger(Event.WEBSOCKET_ATTACHED, { payload: copy, avFlag: this.avFlag });\n    }\n    if (this.mediaType === 'H264Raw') {\n      this.jvp.trigger(Event.H264_DATA_PARSING, { data: copy, avFlag: this.avFlag });\n    }\n    if (this.mediaType === 'JTT1078') {\n      this.jvp.trigger(Event.JTT1078_DATA_PARSING, { data: copy, avFlag: this.avFlag });\n    }\n  }\n\n  receiveSocketMessageHttp(event) {\n    if ((this.client.status >= 200 && this.client.status < 300 || this.client.status == 304) && this.client.readyState == 3) {\n      var i = this.client.response;\n      if (i) {\n        this.receiveSocketMessage({ data: i });\n      }\n    } else {\n      console.log(\"http Recv data readyState!=3 readyState=\" + this.client.readyState);\n    }\n  }\n\n  _msrOnProgress(event) {\n    var target = event.target;\n    var result = target.result;\n\n    if (result == null) {\n      console.log(\"http _msrOnProgress () bigbuffer is null\");\n      return;\n    }\n\n    var r = result.slice(this._msrLastTimeBufferSize);\n    this._msrLastTimeBufferSize = result.byteLength;\n    this.receiveSocketMessage({ data: r });\n  }\n}\n\nexport default WebsocketLoader;\n",
    "/***  ADTS parser helper  \nidx=0\n1\t  Syncword\t\t\t\t\t\t            12\tall bits must be 1\n2\t  MPEG version\t\t\t\t\t          1\t  0 for MPEG-4, 1 for MPEG-2\n3\t  Layer\t\t\t\t\t\t\t              2\t  always 0\n4 \tProtection Absent\t\t\t\t        1\t  et to 1 if there is no CRC and 0 if there is CRC\nidx=3\n5\t  Profile\t\t\t\t\t\t\t            2\t  the MPEG-4 Audio Object Type minus 1\n6\t  MPEG-4 Sampling Frequency Index\t4\t  MPEG-4 Sampling Frequency Index (15 is forbidden)\n7\t  Private Stream\t\t\t\t\t        1\t  set to 0 when encoding, ignore when decoding\n8\t  MPEG-4 Channel Configuration\t  3\t  MPEG-4 Channel Configuration (in the case of 0, the channel configuration is sent via an inband PCE)\n9\t  Originality\t\t\t\t\t\t          1\t  set to 0 when encoding, ignore when decoding\n10\tHome\t\t\t\t\t\t\t              1\t  set to 0 when encoding, ignore when decoding\n11\tCopyrighted Stream\t\t\t\t      1\t  set to 0 when encoding, ignore when decoding\n12\tCopyrighted Start\t\t\t\t        1\t  set to 0 when encoding, ignore when decoding\n13\tFrame Length\t\t\t\t            13\tthis value must include 7 or 9 bytes of header length: FrameLength = (ProtectionAbsent == 1 ? 7 : 9) + size(AACFrame)\n14\tBuffer Fullness\t\t\t\t\t        11\tbuffer fullness\n15\tNumber of AAC Frames\t\t\t      2\t  number of AAC frames (RDBs) in ADTS frame minus 1, for maximum compatibility always use 1 AAC frame per ADTS frame\nidx=7\n16\tCRC\t\t\t\t\t\t\t\t              16\tCRC if protection absent is 0 */\nimport Event from '../events';\nimport { logger } from '../utils/logger';\nimport { ErrorTypes, ErrorDetails } from '../errors';\n\nclass ADTS {\n\n  static initTrackConfig(track, observer, data, offset, audioCodec) {\n    if (!track.samplerate) {\n      let config = ADTS.getAudioConfig(observer, data, offset, audioCodec);\n      track.config = config.config;\n      track.samplerate = config.samplerate;\n      track.channelCount = config.channelCount;\n      track.codec = config.codec;\n      track.manifestCodec = config.manifestCodec;\n      logger.log(`parsed codec:${track.codec},rate:${config.samplerate},nb channel:${config.channelCount}`);\n    }\n  }\n\n  static getAudioConfig(observer, data, offset, audioCodec) {\n    let adtsObjectType,             // :int\n      adtsSampleingIndex,           // :int\n      adtsExtensionSampleingIndex,  // :int\n      adtsChanelConfig,             // :int\n      config,\n      userAgent = navigator.userAgent.toLowerCase(),\n      manifestCodec = audioCodec,\n      adtsSampleingRates = [96000, 88200, 64000, 48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000, 7350];\n\n    // byte 2\n    adtsObjectType = ((data[offset + 2] & 0xC0) >>> 6) + 1;\n    adtsSampleingIndex = ((data[offset + 2] & 0x3C) >>> 2);\n    if (adtsSampleingIndex > adtsSampleingRates.length - 1) {\n      observer.trigger(Event.ERROR, { type: ErrorTypes.MEDIA_ERROR, details: ErrorDetails.FRAG_PARSING_ERROR, fatal: true, reason: `invalid ADTS sampling index:${adtsSampleingIndex}` });\n      return;\n    }\n    adtsChanelConfig = ((data[offset + 2] & 0x01) << 2);\n    adtsChanelConfig |= ((data[offset + 3] & 0xC0) >>> 6); // byte 3\n    logger.log(`manifest codec:${audioCodec},ADTS data:type:${adtsObjectType},sampleingIndex:${adtsSampleingIndex}[${adtsSampleingRates[adtsSampleingIndex]}Hz],channelConfig:${adtsChanelConfig}`);\n\n    // firefox: freq less than 24kHz = AAC SBR (HE-AAC)\n    if (/firefox/i.test(userAgent)) {\n      if (adtsSampleingIndex >= 6) {\n        adtsObjectType = 5;\n        config = new Array(4);\n        // HE-AAC uses SBR (Spectral Band Replication) , high frequencies are constructed from low frequencies\n        // there is a factor 2 between frame sample rate and output sample rate\n        // multiply frequency by 2 (see table below, equivalent to substract 3)\n        adtsExtensionSampleingIndex = adtsSampleingIndex - 3;\n      } else {\n        adtsObjectType = 2;\n        config = new Array(2);\n        adtsExtensionSampleingIndex = adtsSampleingIndex;\n      }\n    }\n    // Android : always use AAC\n    else if (userAgent.indexOf('android') !== -1) {\n      adtsObjectType = 2;\n      config = new Array(2);\n      adtsExtensionSampleingIndex = adtsSampleingIndex;\n    }\n    // for other browsers (Chrome/Vivaldi/Opera ...)\n    // always force audio type to be HE-AAC SBR, as some browsers do not support audio codec switch properly (like Chrome ...)\n    else {\n      adtsObjectType = 5;\n      config = new Array(4);\n      // if (manifest codec is HE-AAC or HE-AACv2) OR (manifest codec not specified AND frequency less than 24kHz)\n      if ((audioCodec && ((audioCodec.indexOf('mp4a.40.29') !== -1) || (audioCodec.indexOf('mp4a.40.5') !== -1))) || (!audioCodec && adtsSampleingIndex >= 6)) {\n        // HE-AAC uses SBR (Spectral Band Replication) , high frequencies are constructed from low frequencies\n        // there is a factor 2 between frame sample rate and output sample rate\n        // multiply frequency by 2 (see table below, equivalent to substract 3)\n        adtsExtensionSampleingIndex = adtsSampleingIndex - 3;\n      } else {\n        // if (manifest codec is AAC) AND (frequency less than 24kHz AND nb channel is 1) OR (manifest codec not specified and mono audio)\n        // Chrome fails to play back with low frequency AAC LC mono when initialized with HE-AAC.  This is not a problem with stereo.\n        if (audioCodec && audioCodec.indexOf('mp4a.40.2') !== -1 && ((adtsSampleingIndex >= 6 && adtsChanelConfig === 1) || /vivaldi/i.test(userAgent)) || (!audioCodec && adtsChanelConfig === 1)) {\n          adtsObjectType = 2;\n          config = new Array(2);\n        }\n        adtsExtensionSampleingIndex = adtsSampleingIndex;\n      }\n    }\n\n    /* refer to http://wiki.multimedia.cx/index.php?title=MPEG-4_Audio#Audio_Specific_Config\n        ISO 14496-3 (AAC).pdf - Table 1.13 — Syntax of AudioSpecificConfig()\n      Audio Profile / Audio Object Type\n      0: Null\n      1: AAC Main\n      2: AAC LC (Low Complexity)\n      3: AAC SSR (Scalable Sample Rate)\n      4: AAC LTP (Long Term Prediction)\n      5: SBR (Spectral Band Replication)\n      6: AAC Scalable\n     sampling freq\n      0: 96000 Hz\n      1: 88200 Hz\n      2: 64000 Hz\n      3: 48000 Hz\n      4: 44100 Hz\n      5: 32000 Hz\n      6: 24000 Hz\n      7: 22050 Hz\n      8: 16000 Hz\n      9: 12000 Hz\n      10: 11025 Hz\n      11: 8000 Hz\n      12: 7350 Hz\n      13: Reserved\n      14: Reserved\n      15: frequency is written explictly\n      Channel Configurations\n      These are the channel configurations:\n      0: Defined in AOT Specifc Config\n      1: 1 channel: front-center\n      2: 2 channels: front-left, front-right\n    */\n    // audioObjectType = profile => profile, the MPEG-4 Audio Object Type minus 1\n    config[0] = adtsObjectType << 3;\n    // samplingFrequencyIndex\n    config[0] |= (adtsSampleingIndex & 0x0E) >> 1;\n    config[1] |= (adtsSampleingIndex & 0x01) << 7;\n    // channelConfiguration\n    config[1] |= adtsChanelConfig << 3;\n    if (adtsObjectType === 5) {\n      // adtsExtensionSampleingIndex\n      config[1] |= (adtsExtensionSampleingIndex & 0x0E) >> 1;\n      config[2] = (adtsExtensionSampleingIndex & 0x01) << 7;\n      // adtsObjectType (force to 2, chrome is checking that object type is less than 5 ???\n      //    https://chromium.googlesource.com/chromium/src.git/+/master/media/formats/mp4/aac.cc\n      config[2] |= 2 << 2;\n      config[3] = 0;\n    }\n    return { config: config, samplerate: adtsSampleingRates[adtsSampleingIndex], channelCount: adtsChanelConfig, codec: ('mp4a.40.' + adtsObjectType), manifestCodec: manifestCodec };\n  }\n\n  /////////////////////////////////////////////////////////////////////////////////////////////////\n\n  // Look for ADTS header | 1111 1111 | 1111 X00X | where X can be either 0 or 1\n  // Layer bits (position 14 and 15) in header should be always 0 for ADTS\n  // More info https://wiki.multimedia.cx/index.php?title=ADTS\n  static isHeader(data, offset) {\n    if (offset + 1 < data.length && ADTS.isHeaderPattern(data, offset)) {\n      return true;\n    }\n    return false;\n  }\n\n  // 与isHeader相同，但我们也检查ADTS帧是否紧跟在最后一个ADTS帧之后，或者是否到达了数据的末尾 \n  // same as isHeader but we also check that ADTS frame follows last ADTS frame or end of data is reached\n  static probe(data, offset) {\n    if (offset + 1 < data.length && ADTS.isHeaderPattern(data, offset)) {\n      // ADTS header Length\n      let headerLength = ADTS.getHeaderLength(data, offset);\n      // ADTS frame Length\n      let frameLength = headerLength;\n      if (offset + 5 < data.length) {\n        frameLength = ADTS.getFullFrameLength(data, offset);\n      }\n\n      let newOffset = offset + frameLength;\n      if (newOffset === data.length || (newOffset + 1 < data.length && ADTS.isHeaderPattern(data, newOffset))) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /////////////////////////////////////////////////////////////////////////////////////////////////\n\n  // return  { offset, headerLength, frameLength, stamp }\n  static parseFrameHeader(data, offset, pts, frameIndex, frameDuration) {\n    let headerLength, frameLength, stamp;\n    let length = data.length;\n\n    // The protection skip bit tells us if we have 2 bytes of CRC data at the end of the ADTS header\n    headerLength = ADTS.getHeaderLength(data, offset);\n\n    // retrieve frame size\n    frameLength = ADTS.getFullFrameLength(data, offset);\n    frameLength -= headerLength;\n\n    if ((frameLength > 0) && ((offset + headerLength + frameLength) <= length)) {\n      stamp = pts + frameIndex * frameDuration;\n      // logger.log(`AAC frame, offset/length/total/pts:${offset+headerLength}/${frameLength}/${data.byteLength}/${(stamp/90).toFixed(0)}`);\n      return { offset, headerLength, frameLength, stamp };\n    }\n    return undefined;\n  }\n\n  // return { sample: aacSample, length: frameLength + headerLength }\n  static appendFrame(track, data, offset, pts, frameIndex) {\n    let frameDuration = ADTS.getFrameDuration(track.samplerate);\n    let header = ADTS.parseFrameHeader(data, offset, pts, frameIndex, frameDuration);\n    if (header) {\n      let stamp = header.stamp;\n      let headerLength = header.headerLength;\n      let frameLength = header.frameLength;\n\n      // logger.log(`AAC frame, offset/length/total/pts:${offset+headerLength}/${frameLength}/${data.byteLength}/${(stamp/90).toFixed(0)}`);\n      let aacSample = {\n        unit: data.subarray(offset + headerLength, offset + headerLength + frameLength),\n        pts: stamp,\n        dts: stamp\n      };\n\n      track.samples.push(aacSample);\n      track.len += frameLength;\n      return { sample: aacSample, length: frameLength + headerLength };\n    }\n\n    return undefined;\n  }\n\n  /////////////////////////////////////////////////////////////////////////////////////////////////\n\n  // 判断是否0xFFF打头，且Layer==00\n  // 0xF6 = 1111 0110\n  static isHeaderPattern(data, offset) {\n    return data[offset] === 0xff && (data[offset + 1] & 0xf6) === 0xf0;\n  }\n\n  static getHeaderLength(data, offset) {\n    return (data[offset + 1] & 0x01 ? 7 : 9);\n  }\n\n  static getFullFrameLength(data, offset) {\n    return ((data[offset + 3] & 0x03) << 11) | (data[offset + 4] << 3) | ((data[offset + 5] & 0xE0) >>> 5);\n  }\n\n  static getFrameDuration(samplerate) {\n    return 1024 * 90000 / samplerate;\n  }\n}\n\nexport default ADTS;\n\n\n",
    "/***  AAC helper */\n\nclass AAC {\n  static getSilentFrame(channelCount) {\n    if (channelCount === 1) {\n      return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x23, 0x80]);\n    } else if (channelCount === 2) {\n      return new Uint8Array([0x21, 0x00, 0x49, 0x90, 0x02, 0x19, 0x00, 0x23, 0x80]);\n    } else if (channelCount === 3) {\n      return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64, 0x00, 0x8e]);\n    } else if (channelCount === 4) {\n      return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64, 0x00, 0x80, 0x2c, 0x80, 0x08, 0x02, 0x38]);\n    } else if (channelCount === 5) {\n      return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64, 0x00, 0x82, 0x30, 0x04, 0x99, 0x00, 0x21, 0x90, 0x02, 0x38]);\n    } else if (channelCount === 6) {\n      return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64, 0x00, 0x82, 0x30, 0x04, 0x99, 0x00, 0x21, 0x90, 0x02, 0x00, 0xb2, 0x00, 0x20, 0x08, 0xe0]);\n    }\n    return null;\n  }\n}\n\nexport default AAC;\n",
    "/*** Generate MP4 Box */\n\n//  MP4 boxes generator for ISO BMFF (ISO Base Media File Format, defined in ISO/IEC 14496-12)\nclass MP4 {\n  static init() {\n    MP4.types = {\n      avc1: [], avcC: [], btrt: [], dinf: [],\n      dref: [], esds: [], ftyp: [], hdlr: [],\n      mdat: [], mdhd: [], mdia: [], mfhd: [],\n      minf: [], moof: [], moov: [], mp4a: [],\n      mvex: [], mvhd: [], sdtp: [], stbl: [],\n      stco: [], stsc: [], stsd: [], stsz: [],\n      stts: [], tfdt: [], tfhd: [], traf: [],\n      trak: [], trun: [], trex: [], tkhd: [],\n      vmhd: [], smhd: [], '.mp3': []\n    };\n\n    for (var i in MP4.types) {\n      if (MP4.types.hasOwnProperty(i)) {\n        MP4.types[i] = [i.charCodeAt(0), i.charCodeAt(1), i.charCodeAt(2), i.charCodeAt(3)];\n      }\n    }\n\n    let constants = MP4.constants = {};\n\n    var videoHdlr = new Uint8Array([\n      0x00,                   // version 0\n      0x00, 0x00, 0x00,       // flags\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      0x76, 0x69, 0x64, 0x65, // handler_type: 'vide'\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x56, 0x69, 0x64, 0x65,\n      0x6f, 0x48, 0x61, 0x6e,\n      0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'VideoHandler'\n    ]);\n\n    var audioHdlr = new Uint8Array([\n      0x00,                   // version 0\n      0x00, 0x00, 0x00,       // flags\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      0x73, 0x6f, 0x75, 0x6e, // handler_type: 'soun'\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x53, 0x6f, 0x75, 0x6e,\n      0x64, 0x48, 0x61, 0x6e,\n      0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'SoundHandler'\n    ]);\n\n    MP4.HDLR_TYPES = {\n      'video': videoHdlr,\n      'audio': audioHdlr\n    };\n\n    var dref = new Uint8Array([\n      0x00,                   // version 0\n      0x00, 0x00, 0x00,       // flags\n      0x00, 0x00, 0x00, 0x01, // entry_count\n      0x00, 0x00, 0x00, 0x0c, // entry_size\n      0x75, 0x72, 0x6c, 0x20, // 'url' type\n      0x00,                   // version 0\n      0x00, 0x00, 0x01        // entry_flags\n    ]);\n\n    var stco = new Uint8Array([\n      0x00,                   // version\n      0x00, 0x00, 0x00,       // flags\n      0x00, 0x00, 0x00, 0x00  // entry_count\n    ]);\n\n    MP4.STTS = MP4.STSC = MP4.STCO = stco;\n\n    MP4.STSZ = new Uint8Array([\n      0x00,                   // version\n      0x00, 0x00, 0x00,       // flags\n      0x00, 0x00, 0x00, 0x00, // sample_size\n      0x00, 0x00, 0x00, 0x00, // sample_count\n    ]);\n    MP4.VMHD = new Uint8Array([\n      0x00,             // version\n      0x00, 0x00, 0x01, // flags\n      0x00, 0x00,       // graphicsmode\n      0x00, 0x00,\n      0x00, 0x00,\n      0x00, 0x00        // opcolor\n    ]);\n    MP4.SMHD = new Uint8Array([\n      0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, // balance\n      0x00, 0x00 // reserved\n    ]);\n\n    MP4.STSD = new Uint8Array([\n      0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x01]);// entry_count\n\n    var majorBrand = new Uint8Array([105, 115, 111, 109]);  // isom\n    var avc1Brand = new Uint8Array([97, 118, 99, 49]);      // avc1\n    var minorVersion = new Uint8Array([0, 0, 0, 1]);\n\n    MP4.FTYP = MP4.box(MP4.types.ftyp, majorBrand, minorVersion, majorBrand, avc1Brand);\n    MP4.DINF = MP4.box(MP4.types.dinf, MP4.box(MP4.types.dref, dref));\n  }\n\n  /////////////////////////////////////////////////////////////////////////////////////////////////\n\n  static box(type) {\n    var\n      payload = Array.prototype.slice.call(arguments, 1),\n      size = 8,\n      i = payload.length,\n      len = i,\n      result;\n    // calculate the total size we need to allocate\n    while (i--) {\n      size += payload[i].byteLength;\n    }\n    result = new Uint8Array(size);\n    result[0] = (size >> 24) & 0xff;\n    result[1] = (size >> 16) & 0xff;\n    result[2] = (size >> 8) & 0xff;\n    result[3] = size & 0xff;\n    result.set(type, 4);\n    // copy the payload into the result\n    for (i = 0, size = 8; i < len; i++) {\n      // copy payload[i] array @ offset size\n      result.set(payload[i], size);\n      size += payload[i].byteLength;\n    }\n    return result;\n  }\n\n  static mdat(data) {\n    //console.log( \"mdat==> \",data.length );\n    return MP4.box(MP4.types.mdat, data);\n  }\n\n  /////////////////////////////////////////////////////////////////////////////////////////////////\n\n  /**\n   * @param tracks... (optional) {array} the tracks associated with this movie\n   */\n  static moov(tracks) {\n    var i = tracks.length, boxes = [];\n    while (i--) {\n      boxes[i] = MP4.trak(tracks[i]);\n    }\n\n    if (tracks[0].id === 1) { console.log(\"moov tracks[0].duration=\" + tracks[0].duration + \" id=\" + tracks[0].id + \" scale=\" + tracks[0].timescale); }\n    if (tracks[0].id === 2) { console.log(\"moov tracks[0].duration=\" + tracks[0].duration + \" id=\" + tracks[0].id + \" scale=\" + tracks[0].timescale); }\n\n    return MP4.box.apply(null, [MP4.types.moov, MP4.mvhd(tracks[0].timescale, tracks[0].duration)].concat(boxes).concat(MP4.mvex(tracks)));\n  }\n\n  static mvhd(timescale, duration) {\n    duration = 0;//duration *= timescale; // 注销这句话后，视频长度将只显示一个数字，并每秒自动增长。Modified by Apex.\n    var bytes = new Uint8Array([\n      0x00,                   // version 0\n      0x00, 0x00, 0x00,       // flags\n      0x00, 0x00, 0x00, 0x01, // creation_time\n      0x00, 0x00, 0x00, 0x02, // modification_time\n      (timescale >> 24) & 0xFF,\n      (timescale >> 16) & 0xFF,\n      (timescale >> 8) & 0xFF,\n      timescale & 0xFF,       // timescale\n      (duration >> 24) & 0xFF,\n      (duration >> 16) & 0xFF,\n      (duration >> 8) & 0xFF,\n      duration & 0xFF,        // duration\n      0x00, 0x01, 0x00, 0x00, // 1.0 rate\n      0x01, 0x00,             // 1.0 volume\n      0x00, 0x00,             // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n\n      0x00, 0x01, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x01, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n\n      0x40, 0x00, 0x00, 0x00, // transformation: unity matrix\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      0xFF, 0xFF, 0xFF, 0xFF  // next_track_ID\n    ]);\n    return MP4.box(MP4.types.mvhd, bytes);\n  }\n\n  /**\n   * Generate a track box.\n   * @param track {object} a track definition\n   * @return {Uint8Array} the track box\n   */\n  static trak(track) {\n    track.duration = track.duration || 0xffffffff;\n    return MP4.box(MP4.types.trak, MP4.tkhd(track), MP4.mdia(track));\n  }\n\n  static tkhd(track) {\n    var id = track.id,\n      duration = track.duration * track.timescale,\n      width = track.width,\n      height = track.height;\n\n    var audioTrackVolume = 0x01;    // 原版这里为0，根据长江通信代码，这里修改为1\n    duration = 0;                   // 用于实现视频长度将每秒自动增长，避免定死视频长度。Modified by Apex.\n\n    //console.log( \"tkhd==> \",track.id, track.duration, track.timescale, width,height );\n    return MP4.box(MP4.types.tkhd, new Uint8Array([\n      0x00,                   // version 0\n      0x00, 0x00, 0x07,       // flags\n      0x00, 0x00, 0x00, 0x00, // creation_time\n      0x00, 0x00, 0x00, 0x00, // modification_time\n      (id >> 24) & 0xFF,\n      (id >> 16) & 0xFF,\n      (id >> 8) & 0xFF,\n      id & 0xFF,              // track_ID\n      0x00, 0x00, 0x00, 0x00, // reserved\n      (duration >> 24),\n      (duration >> 16) & 0xFF,\n      (duration >> 8) & 0xFF,\n      duration & 0xFF,        // duration\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00,             // layer                    视频轨道的叠加顺序，数字越小越靠近观看者，比如1比2靠上，0比1靠上；\n      0x00, 0x00,             // alternate_group          当前track的分组ID，alternate_group值相同的track在同一个分组里面。\n      audioTrackVolume, 0x00, // non-audio track volume   audio track的音量，介于0.0~1.0之间；\n      0x00, 0x00,             // reserved\n\n      0x00, 0x01, 0x00, 0x00, // ----begin composition matrix----\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x01, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00, // ----end composition matrix----\n      0x40, 0x00, 0x00, 0x00, // transformation: unity matrix\n\n      (width >> 8) & 0xFF,    // width and height\n      width & 0xFF,\n      0x00, 0x00,             // width\n      (height >> 8) & 0xFF,\n      height & 0xFF,\n      0x00, 0x00              // height\n    ]));\n  }\n\n  static mdia(track) {\n    return MP4.box(MP4.types.mdia, MP4.mdhd(track.timescale, track.duration), MP4.hdlr(track.type), MP4.minf(track));\n  }\n\n  static hdlr(type) {\n    return MP4.box(MP4.types.hdlr, MP4.HDLR_TYPES[type]);\n  }\n\n  static mdhd(timescale, duration) {\n    duration = 0;//duration *= timescale; // 注销这句话后，视频长度将每秒自动增长，避免定死视频长度。Modified by Apex.\n    return MP4.box(MP4.types.mdhd, new Uint8Array([\n      0x00,                   // version 0\n      0x00, 0x00, 0x00,       // flags\n      0x00, 0x00, 0x00, 0x00, // creation_time      // 根据长江通信代码，这里将最后一位0x02修改为0x00 Modified by Apex.\n      0x00, 0x00, 0x00, 0x00, // modification_time  // 根据长江通信代码，这里将最后一位0x03修改为0x00 Modified by Apex.\n      (timescale >> 24) & 0xFF,\n      (timescale >> 16) & 0xFF,\n      (timescale >> 8) & 0xFF,\n      timescale & 0xFF,       // timescale\n      (duration >> 24),\n      (duration >> 16) & 0xFF,\n      (duration >> 8) & 0xFF,\n      duration & 0xFF,        // duration\n      0x55, 0xc4,             // 'und' language (undetermined)\n      0x00, 0x00\n    ]));\n  }\n\n  static minf(track) {\n    if (track.type === 'audio') {\n      return MP4.box(MP4.types.minf, MP4.box(MP4.types.smhd, MP4.SMHD), MP4.DINF, MP4.stbl(track));\n    } else {\n      return MP4.box(MP4.types.minf, MP4.box(MP4.types.vmhd, MP4.VMHD), MP4.DINF, MP4.stbl(track));\n    }\n  }\n\n  static stbl(track) {\n    return MP4.box(MP4.types.stbl, MP4.stsd(track), MP4.box(MP4.types.stts, MP4.STTS), MP4.box(MP4.types.stsc, MP4.STSC), MP4.box(MP4.types.stsz, MP4.STSZ), MP4.box(MP4.types.stco, MP4.STCO));\n  }\n\n  static stsd(track) {\n    if (track.type === 'audio') {\n      return MP4.box(MP4.types.stsd, MP4.STSD, MP4.mp4a(track));\n    } else {\n      return MP4.box(MP4.types.stsd, MP4.STSD, MP4.avc1(track));\n    }\n  }\n\n  static avc1(track) {\n    var sps = [], pps = [], i, data, len;\n\n    // assemble the SPSs\n    for (i = 0; i < track.sps.length; i++) {\n      data = track.sps[i];\n      len = data.byteLength;\n      sps.push((len >>> 8) & 0xFF);\n      sps.push((len & 0xFF));\n      sps = sps.concat(Array.prototype.slice.call(data)); // SPS\n    }\n\n    // assemble the PPSs\n    for (i = 0; i < track.pps.length; i++) {\n      data = track.pps[i];\n      len = data.byteLength;\n      pps.push((len >>> 8) & 0xFF);\n      pps.push((len & 0xFF));\n      pps = pps.concat(Array.prototype.slice.call(data));\n    }\n\n    var avcc = MP4.box(MP4.types.avcC, new Uint8Array([\n      0x01,     // version\n      sps[3],   // profile\n      sps[4],   // profile compat\n      sps[5],   // level\n      0xfc | 3, // lengthSizeMinusOne, hard-coded to 4 bytes\n      0xE0 | track.sps.length     // 3bit reserved (111) + numOfSequenceParameterSets\n    ]\n      .concat(sps)\n      .concat([track.pps.length]) // numOfPictureParameterSets    \n      .concat(pps))),             // \"PPS\"\n      width = track.width,\n      height = track.height;\n\n    //console.log('avcc:' + Hex.hexDump(avcc));\n    return MP4.box(MP4.types.avc1, new Uint8Array([\n      0x00, 0x00, 0x00,       // reserved(3)\n      0x00, 0x00, 0x00,       // reserved(3)\n      0x00, 0x01,             // data_reference_index(2)\n      0x00, 0x00,             // pre_defined: 3 * 4 bytes\n      0x00, 0x00,             // reserved\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      (width >> 8) & 0xFF,\n      width & 0xff,           // width\n      (height >> 8) & 0xFF,\n      height & 0xff,          // height\n      0x00, 0x48, 0x00, 0x00, // horizresolution\n      0x00, 0x48, 0x00, 0x00, // vertresolution\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x01,             // frame_count\n      0x12,                   // strlen\n      0x6a, 0x65, 0x66, 0x66, // wfs.js\n      0x2d, 0x79, 0x61, 0x6e,\n      0x2f, 0x2f, 0x2f, 0x67,\n      0x77, 0x66, 0x73, 0x2E,\n      0x6A, 0x73, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00,       // compressorname\n      0x00, 0x18,             // depth = 24\n      0xFF, 0xFF]),           // pre_defined = -1 0x11 0x11 -> 0xFF, 0xFF\n      avcc,\n      MP4.box(MP4.types.btrt, new Uint8Array([\n        0x00, 0x1c, 0x9c, 0x80, // bufferSizeDB\n        0x00, 0x2d, 0xc6, 0xc0, // maxBitrate\n        0x00, 0x2d, 0xc6, 0xc0])) // avgBitrate\n    );\n  }\n\n  static mp4a(track) {\n    var audiosamplerate = track.audiosamplerate;\n    var channelCount = track.channelCount;\n    if (channelCount != 1) channelCount = 1;\n    return MP4.box(MP4.types.mp4a, new Uint8Array([\n      0x00, 0x00, 0x00,       // reserved\n      0x00, 0x00, 0x00,       // reserved\n      0x00, 0x01,             // data_reference_index\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00, // reserved: 2 * 4 bytes\n      0x00, channelCount,     // channelcount(2)\n      0x00, 0x10,             // sampleSize:16bits(2)\n      0x00, 0x00, 0x00, 0x00, // reserved2\n      (audiosamplerate >> 8) & 0xFF,\n      audiosamplerate & 0xFF, //\n      0x00, 0x00]),\n      MP4.box(MP4.types.esds, MP4.esds(track)));\n  }\n\n  // esds box中主要是存放Element Stream Descriptors（ESDs）\n  // #define MP4ESDescrTag                   0x03  \n  // #define MP4DecConfigDescrTag            0x04  \n  // #define MP4DecSpecificDescrTag          0x05  \n  static esds(track) {\n    let config = track.config || [];\n    let configlen = config.length;\n    return new Uint8Array([\n      0x00,                    // version 0\n      0x00, 0x00, 0x00,        // flags\n\n      0x03,                    // descriptor_type\n      0x17 + configlen,        // length\n      0x00, 0x01,              // es_id\n      0x00,                    // streamDependenceFlag(1) + URL_Flag(1) + OCRstreamFlag(1) + stream_priority(5)\n\n      0x04,                    // descriptor_type\n      0x0F + configlen,        // length\n      0x40,                    // codec : mpeg4_audio\n      0x15,                    // stream_type\n      0x00, 0x00, 0x00,        // buffer_size\n      0x00, 0x00, 0x00, 0x00,  // maxBitrate\n      0x00, 0x00, 0x00, 0x00,  // avgBitrate\n\n      0x05                     // descriptor_type\n    ].concat([\n      configlen\n    ]).concat(\n      config\n    ).concat([\n      0x06, 0x01, 0x02\n    ])); // GASpecificConfig)); // length + audio config descriptor\n  }\n\n  static mvex(tracks) {\n    var i = tracks.length, boxes = [];\n    while (i--) {\n      boxes[i] = MP4.trex(tracks[i]);\n    }\n    return MP4.box.apply(null, [MP4.types.mvex].concat(boxes));\n  }\n\n  static trex(track) {\n    var id = track.id;\n    return MP4.box(MP4.types.trex, new Uint8Array([\n      0x00,                   // version 0\n      0x00, 0x00, 0x00,       // flags\n      (id >> 24),\n      (id >> 16) & 0XFF,\n      (id >> 8) & 0XFF,\n      (id & 0xFF),            // track_ID\n      0x00, 0x00, 0x00, 0x01, // default_sample_description_index\n      0x00, 0x00, 0x00, 0x00, // default_sample_duration\n      0x00, 0x00, 0x00, 0x00, // default_sample_size\n      0x00, 0x01, 0x00, 0x01  // default_sample_flags  根据长江通信代码，最后一位修改为0x00(原为0x01)，modified by Apex.\n    ]));\n  }\n\n  /////////////////////////////////////////////////////////////////////////////////////////////////\n\n  static moof(sn, baseMediaDecodeTime, track) {\n    // let dms = parseFloat(track.duration) / parseFloat(track.timescale);\n    // let dmst = parseFloat(baseMediaDecodeTime + track.duration) / parseFloat(track.timescale);\n    // if (track.id === 1) { console.log(\"moof baseMediaDecodeTime=\" + baseMediaDecodeTime + \" track.duration=\" + track.duration + \" id=\" + track.id + \" scale=\" + track.timescale + \" next=\" + (baseMediaDecodeTime + track.duration) + \" duration(ms)=\" + dms + \" duration total(ms)=\" + dmst); }\n    // if (track.id === 2) { console.log(\"moof baseMediaDecodeTime=\" + baseMediaDecodeTime + \" track.duration=\" + track.duration + \" id=\" + track.id + \" scale=\" + track.timescale + \" next=\" + (baseMediaDecodeTime + track.duration) + \" duration(ms)=\" + dms + \" duration total(ms)=\" + dmst); }\n    return MP4.box(MP4.types.moof, MP4.mfhd(sn), MP4.traf(track, baseMediaDecodeTime));\n  }\n\n  static mfhd(sequenceNumber) {\n    return MP4.box(MP4.types.mfhd, new Uint8Array([\n      0x00,\n      0x00, 0x00, 0x00, // flags\n      (sequenceNumber >> 24),\n      (sequenceNumber >> 16) & 0xFF,\n      (sequenceNumber >> 8) & 0xFF,\n      sequenceNumber & 0xFF, // sequence_number\n    ]));\n  }\n\n  static traf(track, baseMediaDecodeTime) {\n    var sampleDependencyTable = MP4.sdtp(track), id = track.id;\n\n    //console.log(\"traf==> \", id, baseMediaDecodeTime);\n    return MP4.box(MP4.types.traf,\n      MP4.box(MP4.types.tfhd, new Uint8Array([\n        0x00,             // version 0\n        0x00, 0x00, 0x00, // flags\n        (id >> 24),\n        (id >> 16) & 0XFF,\n        (id >> 8) & 0XFF,\n        (id & 0xFF)       // track_ID\n      ])),\n      MP4.box(MP4.types.tfdt, new Uint8Array([\n        0x00,             // version 0\n        0x00, 0x00, 0x00, // flags\n        (baseMediaDecodeTime >> 24),\n        (baseMediaDecodeTime >> 16) & 0XFF,\n        (baseMediaDecodeTime >> 8) & 0XFF,\n        (baseMediaDecodeTime & 0xFF) // baseMediaDecodeTime\n      ])),\n      MP4.trun(track,\n        sampleDependencyTable.length +\n        16 + // tfhd\n        16 + // tfdt\n        8 +  // traf header\n        16 + // mfhd\n        8 +  // moof header\n        8),  // mdat header\n      sampleDependencyTable);\n  }\n\n  static trun(track, offset) {\n    var samples = track.samples || [],\n      len = samples.length,\n      arraylen = 12 + (16 * len),\n      array = new Uint8Array(arraylen),\n      i, sample, duration, size, flags, cts;\n\n    sample = samples[0];\n    //console.log(\"trun==> \", sample.duration, sample.cts, sample.size, len);\n\n    offset += 8 + arraylen;\n    array.set([\n      0x00,             // version 0\n      0x00, 0x0f, 0x01, // flags\n      (len >>> 24) & 0xFF,\n      (len >>> 16) & 0xFF,\n      (len >>> 8) & 0xFF,\n      len & 0xFF,       // sample_count\n      (offset >>> 24) & 0xFF,\n      (offset >>> 16) & 0xFF,\n      (offset >>> 8) & 0xFF,\n      offset & 0xFF     // data_offset\n    ], 0);\n\n    for (i = 0; i < len; i++) {\n      sample = samples[i];\n      duration = sample.duration;\n      size = sample.size;\n      flags = sample.flags;\n      cts = sample.cts;\n      array.set([\n        (duration >>> 24) & 0xFF,\n        (duration >>> 16) & 0xFF,\n        (duration >>> 8) & 0xFF,\n        duration & 0xFF,          // sample_duration\n        (size >>> 24) & 0xFF,\n        (size >>> 16) & 0xFF,\n        (size >>> 8) & 0xFF,\n        size & 0xFF,              // sample_size\n        (flags.isLeading << 2) | flags.dependsOn,\n        (flags.isDependedOn << 6) | (flags.hasRedundancy << 4) | (flags.paddingValue << 1) | flags.isNonSync,\n        flags.degradPrio & 0xF0 << 8,\n        flags.degradPrio & 0x0F,  // sample_flags\n        (cts >>> 24) & 0xFF,\n        (cts >>> 16) & 0xFF,\n        (cts >>> 8) & 0xFF,\n        cts & 0xFF                // sample_composition_time_offset\n      ], 12 + 16 * i);\n    }\n    return MP4.box(MP4.types.trun, array);\n  }\n\n  static sdtp(track) {\n    var samples = track.samples || [], bytes = new Uint8Array(4 + samples.length), flags;\n\n    // leave the full box header (4 bytes) all zero write the sample table\n    for (var i = 0; i < samples.length; i++) {\n      flags = samples[i].flags;\n      bytes[i + 4] = (flags.dependsOn << 4) | (flags.isDependedOn << 2) | (flags.hasRedundancy);\n    }\n\n    return MP4.box(MP4.types.sdtp, bytes);\n  }\n\n  /////////////////////////////////////////////////////////////////////////////////////////////////\n\n  static initSegment(tracks) {\n    if (!MP4.types) { MP4.init(); }\n\n    var movie = MP4.moov(tracks), result;\n    result = new Uint8Array(MP4.FTYP.byteLength + movie.byteLength);\n    result.set(MP4.FTYP);\n    result.set(movie, MP4.FTYP.byteLength);\n    return result;\n  }\n}\n\nexport default MP4;\n",
    "/*** fMP4 remuxer */\nimport AAC from './aac-helper';\nimport MP4 from './mp4-generator';\nimport Event from '../events';\nimport { logger } from '../utils/logger';\nimport { ErrorTypes, ErrorDetails } from '../errors';\nimport '../utils/polyfill';\n\nclass MP4Remuxer {\n\n  constructor(observer, id, config) {\n    this.observer = observer;\n    this.id = id;\n    this.config = config;\n\n    this.PES_TIMESCALE = 90000; // PTS/DTS的初始值，一般来源于录制的视频的频率，按照h264的设定是90HZ\n    this.PES_TIMESCALE_SOUN = 8e3;\n    this.PES2MP4SCALEFACTOR = 4;\n    this.MP4_TIMESCALE = this.PES_TIMESCALE / this.PES2MP4SCALEFACTOR;\n    this.H264_TIMEBASE = 3000; //3000; // 3000->320\n    this.SOUN_TIMEBASE = 1024;\n\n    this.ISGenerated = false;\n    this.nextAvcDts = 320; //90300;\n    this.nextAacPts = 1024;\n  }\n\n  destroy() {\n  }\n\n  get passthrough() {\n    return false;\n  }\n\n  /////////////////////////////////////////////////////////////////////////////////////////////////\n\n  insertDiscontinuity() {\n    this._initPTS = this._initDTS = undefined;\n  }\n\n  switchLevel() {\n    this.ISGenerated = false;\n  }\n\n  // avFalg=2：仅视频\n  pushVideo(level, sn, videoTrack, timeOffset, contiguous) {\n    this.level = level;\n    this.sn = sn;\n\n    // generate Init Segment if needed\n    if (!this.ISGenerated) {\n      this.generateVideoIS(videoTrack, timeOffset);\n    }\n\n    if (this.ISGenerated) {\n      if (videoTrack.samples.length) {\n        this.remuxVideo_2(videoTrack, timeOffset, contiguous);\n      }\n    }\n  }\n\n  // avFalg=1：仅音频\n  pushAudio(level, sn, auditTrack, timeOffset, contiguous) {// t, i, a, s, r\n    this.level = level;\n    this.sn_soun = sn;\n\n    if (!this.ISGenerated) {\n      this.generateAudioIS(auditTrack, timeOffset);\n    }\n\n    if (this.ISGenerated) {\n      this.remuxAudio_2(auditTrack, timeOffset, contiguous);\n    }\n  }\n\n  // avFalg=0：音视频-视频\n  pushVideo2(level, sn, videoTrack, auditTrack, timeOffset, contiguous) { // t i a s r n\n    this.level = level;\n    this.sn = sn;\n\n    // generate Init Segment if needed\n    if (!this.ISGenerated) {\n      this.generateVideoAudioIS(videoTrack, auditTrack, timeOffset); // a s r\n    }\n    if (this.ISGenerated) {\n      if (auditTrack.samples.length) {\n        this.remuxAudio_2(auditTrack, timeOffset, contiguous);\n      }\n      if (videoTrack.samples.length) {\n        this.remuxVideo_2(videoTrack, timeOffset, contiguous, auditTrack); // a r n s\n      }\n    }\n  }\n\n  // avFalg=0：音视频-音频\n  pushAudio2(level, sn, auditTrack, timeOffset, contiguous) {\n    this.level = level;\n    this.sn_soun = sn;\n\n    if (this.ISGenerated) {\n      this.remuxAudio_2(auditTrack, timeOffset, contiguous);\n    }\n  }\n\n  /////////////////////////////////////////////////////////////////////////////////////////////////\n\n  generateVideoIS(videoTrack, timeOffset) {\n    var observer = this.observer,\n      videoSamples = videoTrack.samples,\n      pesTimeScale = this.PES_TIMESCALE,\n      tracks = {},\n      data = { id: this.id, level: this.level, sn: this.sn, tracks: tracks, unique: false },\n      computePTSDTS = (this._initPTS === undefined),\n      initPTS, initDTS;\n\n    if (computePTSDTS) {\n      initPTS = initDTS = Infinity;\n    }\n\n    // video\n    if (videoTrack.sps && videoTrack.pps && videoSamples.length) {\n      videoTrack.timescale = this.PES_TIMESCALE; //90000;//this.MP4_TIMESCALE;\n      videoTrack.duration = this.H264_TIMEBASE;\n      tracks.video = { container: 'video/mp4', codec: videoTrack.codec, initSegment: MP4.initSegment([videoTrack]), metadata: { width: videoTrack.width, height: videoTrack.height } };\n\n      if (computePTSDTS) {\n        initPTS = 0; //Math.min(initPTS, videoSamples[0].pts - this.H264_TIMEBASE);\n        initDTS = 0; //Math.min(initDTS, videoSamples[0].dts - this.H264_TIMEBASE);\n      }\n    }\n\n    // trigger event\n    if (Object.keys(tracks).length) {\n      observer.trigger(Event.FRAG_PARSING_INIT_SEGMENT, data);\n      this.ISGenerated = true;\n      if (computePTSDTS) {\n        this._initPTS = initPTS;\n        this._initDTS = initDTS;\n      }\n    } else {\n      console.log(\"generateVideoIS ERROR==> \", ErrorTypes.MEDIA_ERROR);\n    }\n  }\n\n  generateAudioIS(audioTrack, timeOffset) {\n    var observer = this.observer,\n      audioSamples = audioTrack.samples,\n      tracks = {},\n      data = { id: 2, level: this.level, sn: this.sn_soun, tracks: tracks, unique: false },\n      computePTSDTS = this._initPTS === undefined,\n      initPTS,\n      initDTS;\n\n    if (computePTSDTS) {\n      initPTS = initDTS = Infinity;\n    }\n\n    // audio\n    if (audioTrack.config && audioSamples.length) {\n      audioTrack.timescale = audioTrack.samplerate;\n      audioTrack.duration = this.SOUN_TIMEBASE;\n\n      tracks.audio = { container: \"video/mp4\", codec: audioTrack.codec, initSegment: MP4.initSegment([audioTrack]), ISType: \"audio\", metadata: { channelCount: audioTrack.channelCount } };\n\n      if (computePTSDTS) {\n        initPTS = initDTS = 0; //Math.min(initPTS, audioSamples[0].pts - this.SOUN_TIMEBASE);\n      }\n    }\n\n    // trigger event\n    if (Object.keys(tracks).length) {\n      observer.trigger(Event.FRAG_PARSING_INIT_SEGMENT, data);\n      this.ISGenerated = true;\n      if (computePTSDTS) {\n        this._initPTS = initPTS;\n        this._initDTS = initDTS;\n      }\n    } else {\n      console.log(\"generateAudioIS ERROR==> \", ErrorTypes.MEDIA_ERROR);\n    }\n  }\n\n  generateVideoAudioIS(videoTrack, audioTrack, timeOffset) {\n    var observer = this.observer,\n      videoSamples = videoTrack.samples,\n      tracks = {},\n      data = { id: this.id, level: this.level, sn: this.sn, tracks: tracks, unique: false },\n      computePTSDTS = (this._initPTS === undefined),\n      initPTS,\n      initDTS;\n\n    if (computePTSDTS) {\n      initPTS = initDTS = Infinity;\n    }\n\n    var avTracks = [];\n    if (videoTrack.sps && videoTrack.pps && videoSamples.length) {\n      videoTrack.timescale = this.PES_TIMESCALE;\n      videoTrack.duration = this.H264_TIMEBASE;\n      avTracks.push(videoTrack);\n\n      audioTrack.timescale = this.PES_TIMESCALE_SOUN;\n      audioTrack.duration = this.SOUN_TIMEBASE;\n      audioTrack.channelCount = 1;\n      avTracks.push(audioTrack);\n\n      tracks.audio = {\n        container: \"video/mp4\",\n        codec: audioTrack.codec,\n        initSegment: MP4.initSegment([audioTrack]),\n        ISType: \"videoaudio\",\n        metadata: { channelCount: audioTrack.channelCount }\n      };\n\n      tracks.video = {\n        container: \"video/mp4\",\n        codec: videoTrack.codec,\n        initSegment: MP4.initSegment([videoTrack]),\n        ISType: \"videoaudio\",\n        metadata: { width: videoTrack.width, height: videoTrack.height }\n      };\n\n      if (computePTSDTS) {\n        initPTS = 0; //Math.min(initPTS, videoSamples[0].pts - this.H264_TIMEBASE);\n        initDTS = 0; //Math.min(initDTS, videoSamples[0].dts - this.H264_TIMEBASE);\n      }\n    }\n\n    // trigger event\n    if (Object.keys(tracks).length) {\n      observer.trigger(Event.FRAG_PARSING_INIT_SEGMENT, data);\n      this.ISGenerated = true;\n      if (computePTSDTS) {\n        this._initPTS = initPTS;\n        this._initDTS = initDTS;\n      }\n    } else {\n      console.log(\"generateVideoAudioIS ERROR==> \", ErrorTypes.MEDIA_ERROR);\n    }\n  }\n\n  /////////////////////////////////////////////////////////////////////////////////////////////////\n\n  remuxVideo_2(track, timeOffset, contiguous, audioTrackLength) {\n    var offset = 8,\n      pesTimeScale = this.PES_TIMESCALE,\n      pes2mp4ScaleFactor = this.PES2MP4SCALEFACTOR,\n      mp4SampleDuration,\n      mdat, moof,\n      firstPTS, firstDTS,\n      nextDTS,\n      inputSamples = track.samples,\n      outputSamples = [];\n\n    /* concatenate the video data and construct the mdat in place(need 8 more bytes to fill length and mpdat type) */\n    mdat = new Uint8Array(track.len + (4 * track.nbNalu) + 8);\n    let view = new DataView(mdat.buffer);\n    view.setUint32(0, mdat.byteLength);\n    mdat.set(MP4.types.mdat, 4);\n\n    var sampleDuration = 0;\n    let ptsnorm, dtsnorm, mp4Sample, lastDTS;\n\n    let firstAvcSampleDts;\n    let totalDuration = 0;\n    for (let i = 0; i < inputSamples.length; i++) {\n      let avcSample = inputSamples[i], mp4SampleLength = 0, compositionTimeOffset;\n\n      // convert NALU bitstream to MP4 format (prepend NALU with size field)\n      while (avcSample.units.units.length) {\n        let unit = avcSample.units.units.shift();\n        view.setUint32(offset, unit.data.byteLength);\n        offset += 4;\n        mdat.set(unit.data, offset);\n        offset += unit.data.byteLength;\n        mp4SampleLength += 4 + unit.data.byteLength;\n      }\n\n      if (firstAvcSampleDts == undefined) {\n        firstAvcSampleDts = avcSample.dts;\n      }\n      totalDuration += avcSample.duration;\n\n      mp4SampleDuration = avcSample.duration;\n      let pts = avcSample.pts - this._initPTS;\n      let dts = avcSample.dts - this._initDTS;\n      dts = Math.min(pts, dts);\n\n      if (lastDTS !== undefined) {\n        ptsnorm = this._PTSNormalize(pts, lastDTS);\n        dtsnorm = this._PTSNormalize(dts, lastDTS);\n        sampleDuration = (dtsnorm - lastDTS)\n        if (sampleDuration <= 0) {\n          logger.log(`invalid sample duration at PTS/DTS: ${avcSample.pts}/${avcSample.dts}|dts norm: ${dtsnorm}|lastDTS: ${lastDTS}:${sampleDuration}`);\n          sampleDuration = 1;\n        }\n      }\n      else {\n        var nextAvcDts = this.nextAvcDts, delta;\n        ptsnorm = this._PTSNormalize(pts, nextAvcDts);\n        dtsnorm = this._PTSNormalize(dts, nextAvcDts);\n        if (nextAvcDts) {\n          delta = Math.round((dtsnorm - nextAvcDts));\n          if (/*contiguous ||*/ Math.abs(delta) < 120) { // 600 => 120\n            if (delta) {\n              // if (delta > 1) {\n              //   logger.log(`AVC:${delta} ms hole between fragments detected,filling it`);\n              // } else if (delta < -1) {\n              //   logger.log(`AVC:${(-delta)} ms overlapping between fragments detected`);\n              // }\n              dtsnorm = nextAvcDts;\n              ptsnorm = Math.max(ptsnorm - delta, dtsnorm);\n              logger.log(`Video/PTS/DTS adjusted: ${ptsnorm}/${dtsnorm},delta:${delta}`);\n            }\n          }\n        }\n        this.firstPTS = Math.max(0, ptsnorm);\n        this.firstDTS = Math.max(0, dtsnorm);\n        sampleDuration = 0.04; // 0.03=>0.04\n      }\n\n      outputSamples.push({\n        size: mp4SampleLength,\n        duration: avcSample.duration, // this.H264_TIMEBASE, // mp4SampleDuration, //\n        cts: 0,\n        flags: { isLeading: 0, isDependedOn: 0, hasRedundancy: 0, degradPrio: 0, dependsOn: avcSample.key ? 2 : 1, isNonSync: avcSample.key ? 0 : 1 }\n      });\n      lastDTS = dtsnorm;\n    }\n\n    // var lastSampleDuration = 0;\n    // if (outputSamples.length >= 2) {\n    //   lastSampleDuration = outputSamples[outputSamples.length - 2].duration;\n    //   outputSamples[0].duration = lastSampleDuration;\n    // }\n\n    //this.nextAvcDts = dtsnorm + lastSampleDuration;\n    let dropped = track.dropped;\n    track.len = 0;\n    track.nbNalu = 0;\n    track.dropped = 0;\n    if (outputSamples.length && navigator.userAgent.toLowerCase().indexOf('chrome') > -1) {\n      let flags = outputSamples[0].flags;\n      flags.dependsOn = 2;\n      flags.isNonSync = 0;\n    }\n\n    dtsnorm = firstAvcSampleDts;\n    track.samples = outputSamples;\n    track.duration = totalDuration;\n    moof = MP4.moof(track.sequenceNumber++, dtsnorm, track);\n    track.samples = [];\n\n    let data = {\n      id: this.id,\n      level: this.level,\n      sn: this.sn,\n      data1: moof,\n      data2: mdat,\n      startPTS: ptsnorm,\n      endPTS: ptsnorm,\n      startDTS: dtsnorm,\n      endDTS: dtsnorm,\n      type: 'video',\n      nb: outputSamples.length,\n      dropped: dropped\n    };\n    this.observer.trigger(Event.FRAG_PARSING_DATA, data);\n    return data;\n  }\n\n  remuxAudio_2(track, timeOffset, contiguous) {\n    let pesTimeScale = this.PES_TIMESCALE_SOUN,\n      mp4timeScale = track.timescale,\n      pes2mp4ScaleFactor = pesTimeScale / mp4timeScale,\n      expectedSampleDuration = track.timescale * 1024 / track.samplerate;\n    var view,\n      offset = 8,\n      aacSample, mp4Sample,\n      unit,\n      mdat, moof,\n      firstPTS, firstDTS, lastDTS,\n      pts, dts, ptsnorm, dtsnorm,\n      samples = [],\n      samples0 = [];\n\n    track.samples.sort(function (a, b) { return (a.pts - b.pts); });\n    samples0 = track.samples;\n\n    let nextAacPts = (contiguous ? this.nextAacPts : timeOffset * pesTimeScale);\n\n    // If the audio track is missing samples, the frames seem to get \"left-shifted\" within the\n    // resulting mp4 segment, causing sync issues and leaving gaps at the end of the audio segment.\n    // In an effort to prevent this from happening, we inject frames here where there are gaps.\n    // When possible, we inject a silent frame; when that's not possible, we duplicate the last frame.\n    let firstPtsNorm = this._PTSNormalize(samples0[0].pts - this._initPTS, nextAacPts), pesFrameDuration = expectedSampleDuration * pes2mp4ScaleFactor;\n    var nextPtsNorm = firstPtsNorm + pesFrameDuration;\n    let firstAAcSampleDts;\n    let totalDuration = 0;\n\n    while (samples0.length) {\n      aacSample = samples0.shift();\n      unit = aacSample.units.units.shift();\n\n      pts = aacSample.pts - this._initDTS;\n      dts = aacSample.dts - this._initDTS;\n      //logger.log(`Audio/PTS:${Math.round(pts/90)}`);\n\n      if (firstAAcSampleDts == undefined) {\n        firstAAcSampleDts = aacSample.dts;\n      }\n      totalDuration += aacSample.duration;\n\n      // if not first sample\n      if (lastDTS !== undefined) {\n        ptsnorm = this._PTSNormalize(pts, lastDTS);\n        dtsnorm = this._PTSNormalize(dts, lastDTS);\n        mp4Sample.duration = (dtsnorm - lastDTS) / pes2mp4ScaleFactor;\n      }\n      else {\n        ptsnorm = this._PTSNormalize(pts, nextAacPts);\n        dtsnorm = this._PTSNormalize(dts, nextAacPts);\n        let delta = Math.round(1000 * (ptsnorm - nextAacPts) / pesTimeScale);\n        // if fragment are contiguous, detect hole/overlapping between fragments\n        if (contiguous) {\n          // log delta\n          if (delta) {\n            // if (delta > 0) {\n            //   logger.log(`${delta} ms hole between AAC samples detected,filling it`);\n            //   // if we have frame overlap, overlapping for more than half a frame duraion\n            // } else if (delta < -12) {\n            //   // drop overlapping audio frames... browser will deal with it\n            //   logger.log(`${(-delta)} ms overlapping between AAC samples detected, drop frame`);\n            //   track.len -= unit.data.byteLength; //.length; //.byteLength;\n            //   continue;\n            // }\n            // set PTS/DTS to expected PTS/DTS\n            ptsnorm = dtsnorm = nextAacPts;\n          }\n        }\n\n        // remember first PTS of our aacSamples, ensure value is positive\n        firstPTS = Math.max(0, ptsnorm);\n        firstDTS = Math.max(0, dtsnorm);\n        if (track.len > 0) {\n          /* concatenate the audio data and construct the mdat in place (need 8 more bytes to fill length and mdat type) */\n          mdat = new Uint8Array(track.len + 8);\n          view = new DataView(mdat.buffer);\n          view.setUint32(0, mdat.byteLength);\n          mdat.set(MP4.types.mdat, 4);\n        } else {\n          // no audio samples\n          return;\n        }\n      }\n\n      mdat.set(unit.data, offset);\n      offset += unit.data.byteLength;\n      //console.log('PTS/DTS/initDTS/normPTS/normDTS/relative PTS : ${aacSample.pts}/${aacSample.dts}/${this._initDTS}/${ptsnorm}/${dtsnorm}/${(aacSample.pts/4294967296).toFixed(3)}');\n      mp4Sample = {\n        size: unit.data.byteLength,\n        duration: aacSample.duration, \n        pts: aacSample.pts,\n        dts: aacSample.dts,\n        cts: 0,\n        flags: { isLeading: 0, isDependedOn: 0, hasRedundancy: 0, degradPrio: 0, dependsOn: 1, }\n      };\n      samples.push(mp4Sample);\n      lastDTS = dtsnorm;\n    }\n\n    var lastSampleDuration = 0; // 0 => 1024\n    var nbSamples = samples.length;\n    //set last sample duration as being identical to previous sample\n    if (nbSamples >= 2) {\n      lastSampleDuration = samples[nbSamples - 2].duration;\n      mp4Sample.duration = lastSampleDuration;\n    }\n\n    if (nbSamples) {\n      // next aac sample PTS should be equal to last sample PTS + duration\n      this.nextAacPts = ptsnorm + pes2mp4ScaleFactor * lastSampleDuration;\n      //logger.log('Audio/PTS/PTSend:' + aacSample.pts.toFixed(0) + '/' + this.nextAacDts.toFixed(0));\n      track.len = 0;\n      track.samples = samples;\n      track.duration = totalDuration;\n      moof = MP4.moof(track.sequenceNumber++, firstAAcSampleDts / pes2mp4ScaleFactor, track);\n      track.samples = [];\n\n      let audioData = {\n        id: this.id,\n        level: this.level,\n        sn: this.sn_soun,\n        data1: moof,\n        data2: mdat,\n        // startPTS: firstPTS / pesTimeScale,\n        // endPTS: this.nextAacPts / pesTimeScale,\n        // startDTS: firstDTS / pesTimeScale,\n        // endDTS: (dtsnorm + pes2mp4ScaleFactor * lastSampleDuration) / pesTimeScale,\n        type: 'audio',\n        nb: nbSamples\n      };\n      this.observer.trigger(Event.FRAG_PARSING_DATA, audioData);\n      return audioData;\n    }\n    return null;\n  }\n\n  /////////////////////////////////////////////////////////////////////////////////////////////////\n\n  _PTSNormalize(value, reference) {\n    if (reference === undefined) {\n      return value;\n    }\n\n    var offset;\n    if (reference < value) {\n      // - 2^33\n      offset = -8589934592;\n    } else {\n      // + 2^33\n      offset = 8589934592;\n    }\n\n    /* PTS is 33bit (from 0 to 2^33 -1)\n      if diff between value and reference is bigger than half of the amplitude (2^32) then it means that\n      PTS looping occured. fill the gap */\n    while (Math.abs(value - reference) > 4294967296) {\n      value += offset;\n    }\n    return value;\n  }\n}\n\nexport default MP4Remuxer;\n",
    "'use strict';\n\nfunction noop() {}\n\nconst fakeLogger = {\n  trace: noop,\n  debug: noop,\n  log: noop,\n  warn: noop,\n  info: noop,\n  error: noop\n};\n\nlet exportedLogger = fakeLogger;\n\n//let lastCallTime;\n// function formatMsgWithTimeInfo(type, msg) {\n//   const now = Date.now();\n//   const diff = lastCallTime ? '+' + (now - lastCallTime) : '0';\n//   lastCallTime = now;\n//   msg = (new Date(now)).toISOString() + ' | [' +  type + '] > ' + msg + ' ( ' + diff + ' ms )';\n//   return msg;\n// }\n\nfunction formatMsg(type, msg) {\n  msg = '[' +  type + '] > ' + msg;\n  return msg;\n}\n\nfunction consolePrintFn(type) {\n  const func = window.console[type];\n  if (func) {\n    return function(...args) {\n      if(args[0]) {\n        args[0] = formatMsg(type, args[0]);\n      }\n      func.apply(window.console, args);\n    };\n  }\n  return noop;\n}\n\nfunction exportLoggerFunctions(debugConfig, ...functions) {\n  functions.forEach(function(type) {\n    exportedLogger[type] = debugConfig[type] ? debugConfig[type].bind(debugConfig) : consolePrintFn(type);\n  });\n}\n\nexport var enableLogs = function(debugConfig) {\n  if (debugConfig === true || typeof debugConfig === 'object') {\n    exportLoggerFunctions(debugConfig,\n      'trace',\n      'debug',\n      'log',\n      'info',\n      'warn',\n      'error'\n    );\n    \n    // Some browsers don't allow to use bind on console object anyway fallback to default if needed\n    try {\n     exportedLogger.log();\n    } catch (e) {\n      exportedLogger = fakeLogger;\n    }\n  }\n  else {\n    exportedLogger = fakeLogger;\n  }\n};\n\nexport var logger = exportedLogger;\n",
    "if (typeof ArrayBuffer !== 'undefined' && !ArrayBuffer.prototype.slice) {\n  ArrayBuffer.prototype.slice = function (start, end) {\n    var that = new Uint8Array(this);\n    if (end === undefined) {\n      end = that.length;\n    }\n    var result = new ArrayBuffer(end - start);\n    var resultArray = new Uint8Array(result);\n    for (var i = 0; i < resultArray.length; i++) {\n      resultArray[i] = that[i + start];\n    }\n    return result;\n  };\n}\n"
  ]
}